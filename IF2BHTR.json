{
  "openapi": "3.0.1",
  "info": {
    "title": "LEVA⁺ IF2BHTR",
    "description": "Interface for LEVA⁺ related master- and transactional data",
    "contact": {
      "name": "Infosystem AG",
      "url": "https://www.infosystem.ch",
      "email": "support@infosystem.ch"
    },
    "license": {
      "name": "Proprietary Infosystem"
    },
    "version": "v3"
  },
  "paths": {
    "/api/v3/Accessory": {
      "get": {
        "tags": [
          "Accessory"
        ],
        "summary": "Get accessory data from LEVA+.",
        "operationId": "GetAccessory",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "internalMachineTypeID",
            "in": "query",
            "description": "Retrieve a specific record by internal machine type ID. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalMachineID",
            "in": "query",
            "description": "Retrieve a specific record by external machine type ID. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Accessory"
        ],
        "summary": "Create or update an existing accessory in LEVA+.",
        "operationId": "PutAccessory",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated accessory.\r\nYou may use your own ID.\r\nThe same DTO you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessoryDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessoryDisplayType": {
        "enum": [
          "NONE",
          "IDENTIFICATION",
          "QUANTITY"
        ],
        "type": "string",
        "description": "Possible values for performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType property.\r\n- `NONE`: Accessory without identification nor quantity\r\n- `IDENTIFICATION`: Accessory with identification\r\n- `QUANTITY`: Accessory with quantity"
      },
      "AccessoryDto": {
        "required": [
          "AccessoryType",
          "Description",
          "DispositionGroupCode",
          "IsExternalResource"
        ],
        "type": "object",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true
          },
          "AccessoryID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical identification number of the accessory.",
            "format": "int64",
            "nullable": true,
            "example": 27
          },
          "ExternalAccessoryID": {
            "maxLength": 50,
            "type": "string",
            "description": "External technical identification number of the accessory - may be used instead of performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryID.",
            "nullable": true,
            "example": "ABC4711"
          },
          "Origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Is this accessory active or not.",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Accessory's name.",
            "example": "Wooden wedge"
          },
          "AccessoryType": {
            "$ref": "#/components/schemas/AccessoryDisplayType"
          },
          "NumberOfItems": {
            "type": "integer",
            "description": "The exact number of available accessories.\r\nRequired if performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType is set to `QUANTITY`.",
            "format": "int64",
            "nullable": true,
            "example": 20
          },
          "Identification": {
            "maxLength": 200,
            "type": "string",
            "description": "Identification or serial number of the accessory.\r\nRequired if performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType is set to `IDENTIFICATION`.",
            "nullable": true,
            "example": "A507"
          },
          "BranchCode": {
            "maximum": 45629999,
            "minimum": 45620000,
            "type": "integer",
            "description": "C4562 identification code of the branch to which the machine belongs to.",
            "format": "int64",
            "nullable": true
          },
          "IsExternalResource": {
            "type": "boolean",
            "description": "A value indicating whether the resource is external."
          },
          "DispositionGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the accessory's grouping that combines accessories of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "format": "int64",
            "example": 45420010
          },
          "CostCenterNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "TODO: Comment.",
            "nullable": true
          },
          "OwnerCompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "The number of the company that owns the accessory.",
            "format": "int64",
            "nullable": true
          },
          "DispositionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DispositionGroupDto"
            },
            "description": "List of additional disposition groups. A disposition group combines accessories of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "TODO: Comment."
      },
      "DispositionGroupDto": {
        "required": [
          "DispositionGroupCode"
        ],
        "type": "object",
        "properties": {
          "DispositionGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the machine grouping that combines machines of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "format": "int64",
            "example": 45420010
          }
        },
        "additionalProperties": false,
        "description": "TODO: Comment."
      },
      "MaintenanceWindow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "aktiv": {
            "type": "boolean"
          },
          "datumVon": {
            "type": "string",
            "format": "date-time"
          },
          "datumBis": {
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "clientStartErlaubt": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}