{
  "openapi": "3.0.0",
  "info": {
    "title": "IF2LEVA3 - Preview",
    "version": "v3",
    "description": "performis IF2LEVA3 | Interface for leva+ base, scheduling and workshop",
    "contact": {
      "name": "Infosystem AG",
      "email": "support@infosystem.ch",
      "url": "https://www.infosystem.ch"
    }
  },
  "servers": [
    {
      "description": "URL-Sample",
      "url": "https://leva-plus-api.customdomain.com:8443"
    }
  ],
  "paths": {
    "/api/v3/master-data/accessories": {
      "get": {
        "summary": "Search for accessories",
        "operationId": "GetMasterDataAccessories",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalAccessoryId,\r\nexternalAccessoryId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided changeId. Cannot be used together with search\r\nparameters (searchString, internalAccessoryId,\r\nexternalAccessoryId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "accessoryId",
            "in": "query",
            "description": "Retrieve a specific record by internal accessory Id. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalAccessoryId",
            "in": "query",
            "description": "Retrieve a specific record by external accessory Id. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessory"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "changeId": 84702936,
                        "changeDate": "2012-04-23",
                        "accessoryId": 509,
                        "externalAccessoryId": "A509",
                        "origin": "BC365",
                        "active": true,
                        "description": "Wooden wedge",
                        "accessoryDisplayType": "NONE",
                        "numberOfItems": 5,
                        "identification": "A509-810271",
                        "branchCode": 45620000,
                        "isExternalResource": false,
                        "schedulingGroupCode": 45420010,
                        "costCenterNo": "310",
                        "ownerCompanyNo": 100,
                        "additionalSchedulingGroupCode": [
                          {
                            "schedulingGroupCode": 45420010
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for accessories in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Modify accessories",
        "operationId": "PutMasterDataAccessories",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUId) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated accessory.\r\nYou may use your own Id.\r\nThe same data you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accessory"
              },
              "examples": {
                "example1": {
                  "value": {
                    "changeId": 84702936,
                    "changeDate": "2012-04-23",
                    "accessoryId": 509,
                    "externalAccessoryId": "A509",
                    "origin": "BC365",
                    "active": true,
                    "description": "Wooden wedge",
                    "accessoryDisplayType": "NONE",
                    "numberOfItems": 5,
                    "identification": "A509-810271",
                    "branchCode": 45620000,
                    "isExternalResource": false,
                    "schedulingGroupCode": 45420010,
                    "costCenterNo": "310",
                    "ownerCompanyNo": 100,
                    "additionalSchedulingGroupCode": [
                      {
                        "schedulingGroupCode": 45420010
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/accessory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/accessory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessory"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "changeId": 84702936,
                      "changeDate": "2012-04-23",
                      "accessoryId": 509,
                      "externalAccessoryId": "A509",
                      "origin": "BC365",
                      "active": true,
                      "description": "Wooden wedge",
                      "accessoryDisplayType": "NONE",
                      "numberOfItems": 5,
                      "identification": "A509-810271",
                      "branchCode": 45620000,
                      "isExternalResource": false,
                      "schedulingGroupCode": 45420010,
                      "costCenterNo": "310",
                      "ownerCompanyNo": 100,
                      "additionalSchedulingGroupCode": [
                        {
                          "schedulingGroupCode": 45420010
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessory"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing accessory if internal or external ID match.\nCreates an accessory if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      },
      "parameters": []
    },
    "/api/v3/master-data/machines": {
      "get": {
        "summary": "Search for machines",
        "operationId": "GetMasterDataMachines",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalMachineId,\r\nexternalMachineId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided changeId. Cannot be used together with search\r\nparameters (searchString, internalMachineId,\r\nexternalMachineId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "machineId",
            "in": "query",
            "description": "Retrieve a specific record by internal machine Id. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalMachineId",
            "in": "query",
            "description": "Retrieve a specific record by external machine Id. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/machine"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "changeId": 1,
                        "changeDate": "2019-08-24T14:15:22Z",
                        "machineId": 4711,
                        "externalMachineId": "ABC-4711",
                        "origin": "string",
                        "active": true,
                        "description": "Genie RS-1932, Blue Version",
                        "placingOnMarket": "2022-01-11",
                        "machineTypeId": 4711,
                        "externalMachineTypeId": "ABC4711",
                        "machineGUId": "87315090-9a06-4edc-8fc5-f9f68972e3c6",
                        "machineNo": 87315,
                        "acquisitionDate": "2022-11-25",
                        "underWarrantyUntil": "2028-11-11",
                        "manufacturerCode": 45430010,
                        "masterNumber": "325.752.721",
                        "chassisNumber": "WMG6315L4FZ010120",
                        "engineNumber": "D - 0 000 123",
                        "typeCertificateNumber": "123123",
                        "licensePlate": "BE 1000",
                        "wikiUrl": "string",
                        "ownerCompanyNo": 1235,
                        "assetNo": "1546",
                        "ownerBpAddrId": 12345,
                        "externalOwnerBpAddrId": "ABC-12345",
                        "locationBpAddrId": 12345,
                        "externalLocationBpAddrId": "ABC-12345",
                        "invoiceBpAddrId": 12345,
                        "externalInvoiceBpAddrId": "ABC-123451",
                        "regularDriverBpId": 12345,
                        "externalRegularDriverBpId": "ABC-12345",
                        "counterGroupCode": 45460010,
                        "standardTrailerMachineId": 5679,
                        "externalStandardTrailerMachineId": 0,
                        "machineModelCode": 45410010,
                        "branchCode": 45620010,
                        "isExternalResource": true,
                        "yearOfManufacture": 2020,
                        "schedulingGroupCode": 45420010,
                        "locationApiKey": "string",
                        "isMachineLocationSyncEnabled": true,
                        "manufacturerApiCode": 33060010,
                        "engineType": "Diesel",
                        "costCenterNo": "56789",
                        "telematicsDeviceGroupCode": 33360010,
                        "lastYearlyService": "2023-01-12",
                        "typeOfDrives": [
                          "B"
                        ],
                        "schedulingGroups": [
                          {
                            "schedulingGroupCode": 45420010
                          }
                        ],
                        "machineDrivers": [
                          {
                            "driverBpId": 57689,
                            "externalDriverBpId": "ABC-12345"
                          }
                        ],
                        "machineCounters": [
                          {
                            "counterTypeCode": 45480010,
                            "account": "4711"
                          }
                        ],
                        "machineUsages": [
                          {
                            "application": "B_HTR"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for machines in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Modify machines",
        "operationId": "PutMasterDataMachines",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated machine.\r\nYou may use your own Id.\r\nThe same data you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/machine"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/machine"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/machine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/machine"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "changeId": 1,
                      "changeDate": "2019-08-24T14:15:22Z",
                      "machineId": 4711,
                      "externalMachineId": "ABC-4711",
                      "origin": "string",
                      "active": true,
                      "description": "Genie RS-1932, Blue Version",
                      "placingOnMarket": "2022-01-11",
                      "machineTypeId": 4711,
                      "externalMachineTypeId": "ABC4711",
                      "machineGUId": "87315090-9a06-4edc-8fc5-f9f68972e3c6",
                      "machineNo": 87315,
                      "acquisitionDate": "2022-11-25",
                      "underWarrantyUntil": "2028-11-11",
                      "manufacturerCode": 45430010,
                      "masterNumber": "325.752.721",
                      "chassisNumber": "WMG6315L4FZ010120",
                      "engineNumber": "D - 0 000 123",
                      "typeCertificateNumber": "123123",
                      "licensePlate": "BE 1000",
                      "wikiUrl": "string",
                      "ownerCompanyNo": 1235,
                      "assetNo": "1546",
                      "ownerBpAddrId": 12345,
                      "externalOwnerBpAddrId": "ABC-12345",
                      "locationBpAddrId": 12345,
                      "externalLocationBpAddrId": "ABC-12345",
                      "invoiceBpAddrId": 12345,
                      "externalInvoiceBpAddrId": "ABC-123451",
                      "regularDriverBpId": 12345,
                      "externalRegularDriverBpId": "ABC-12345",
                      "counterGroupCode": 45460010,
                      "standardTrailerMachineId": 5679,
                      "externalStandardTrailerMachineId": 0,
                      "machineModelCode": 45410010,
                      "branchCode": 45620010,
                      "isExternalResource": true,
                      "yearOfManufacture": 2020,
                      "schedulingGroupCode": 45420010,
                      "locationApiKey": "string",
                      "isMachineLocationSyncEnabled": true,
                      "manufacturerApiCode": 33060010,
                      "engineType": "Diesel",
                      "costCenterNo": "56789",
                      "telematicsDeviceGroupCode": 33360010,
                      "lastYearlyService": "2023-01-12",
                      "typeOfDrives": [
                        "B"
                      ],
                      "schedulingGroups": [
                        {
                          "schedulingGroupCode": 45420010
                        }
                      ],
                      "machineDrivers": [
                        {
                          "driverBpId": 57689,
                          "externalDriverBpId": "ABC-12345"
                        }
                      ],
                      "machineCounters": [
                        {
                          "counterTypeCode": 45480010,
                          "account": "4711"
                        }
                      ],
                      "machineUsages": [
                        {
                          "application": "B_HTR"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/machine"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing machine if internal or external ID match.\nCreates a machine if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      },
      "parameters": []
    },
    "/api/v3/master-data/machine-types": {
      "get": {
        "summary": "Search for machine types",
        "operationId": "GetMasterDataMachineTypes",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineTypeId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided changeId. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineTypeId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "machineTypeId",
            "in": "query",
            "description": "Retrieve a specific record by internal machine type Id. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalMachineTypeId",
            "in": "query",
            "description": "Retrieve a specific record by external machine type Id. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/machineType"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "changeId": 1,
                        "changeDate": "2019-08-24T14:15:22Z",
                        "machineTypeId": 4711,
                        "externalMachineTypeId": "ABC4711",
                        "origin": "string",
                        "active": true,
                        "description": "Genie-GS 1432",
                        "manufacturerSeries": "GS-1432",
                        "suppliersBusinessBpAddrId": 3244,
                        "externalSuppliersBusinessBpAddrId": "ABC-12345"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for available machine types in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Modify machine types",
        "operationId": "PutMasterDataMachineTypes",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated machine type.\r\nYou may use your own Id.\r\nThe same data you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/machineType"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "changeId": 1,
                      "changeDate": "2019-08-24T14:15:22Z",
                      "machineTypeId": 4711,
                      "externalMachineTypeId": "ABC4711",
                      "origin": "string",
                      "active": true,
                      "description": "Genie-GS 1432",
                      "manufacturerSeries": "GS-1432",
                      "suppliersBusinessBpAddrId": 3244,
                      "externalSuppliersBusinessBpAddrId": "ABC-12345"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/machineType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing machine type if internal or external ID match.\nCreates a machine type if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      },
      "parameters": []
    },
    "/api/v3/master-data/surcharges": {
      "get": {
        "summary": "Search for surcharges",
        "operationId": "GetMasterDataSurcharges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/surcharge"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "internalSurchargeId": 483915,
                        "externalSurchargeId": "483915EXT",
                        "description": "additional cleaning",
                        "priceUnitOfMeasure": "PCE",
                        "sortNo": 1000,
                        "suggestedQuantity": 1,
                        "suggestedOnRentalHandover": false,
                        "suggestedOnRentalReturn": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (surchargeId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided changeId. Cannot be used together with search parameter (surchargeId, searchString).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "surchargeId",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "externalSurchargeId",
            "description": "Retrieve specific record by external id. (Ignores other search options if provided)"
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available surcharges in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Modify surcharges",
        "operationId": "PutMasterDataSurcharges",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated a surcharge.\nYou may use your own Id.\nThe same data you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/machineType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/surcharge"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "internalSurchargeId": 483915,
                      "externalSurchargeId": "483915EXT",
                      "description": "additional cleaning",
                      "priceUnitOfMeasure": "PCE",
                      "sortNo": 1000,
                      "suggestedQuantity": 1,
                      "suggestedOnRentalHandover": false,
                      "suggestedOnRentalReturn": false
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/surcharge"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing surcharge by ID match.\nCreates a surcharge if no ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs": {
      "get": {
        "summary": "Search for jobs",
        "operationId": "GetSchedulingJobs",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/job"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "companyNo": 100,
                        "jobId": 37281,
                        "detailsIncluded": true,
                        "reportEMailReceivers": "jack.smith@customerdomain.com; sarah.root@customermail.com",
                        "languageIsoCode": "US",
                        "internalEmployeeId": 3829,
                        "externalEmployeeId": "E839",
                        "orderNo": "A827109",
                        "orderTitle": "support on construction site A-51",
                        "jobDateTimeFrom": "2022-12-01T07:00:00",
                        "jobDateTimeTo": "2022-12-23T15:00:00",
                        "primaryJobLocation": {
                          "locationId": 8392,
                          "description": "Construction Site, Gate 4",
                          "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
                          "address": {
                            "street": "Boca Chica Blvd.",
                            "houseNo": "52448",
                            "pOBox": "string",
                            "additionalLine1": "C/O Dr. Maria Smith",
                            "additionalLine2": "Environmental Dept / Building D2",
                            "country": "US",
                            "zipCode": "TX 78521",
                            "city": "Brownsville",
                            "latitude": 25.9850628,
                            "longitude": -97.1871375
                          }
                        },
                        "resourceNo": 84739,
                        "schedulingGroupCode": 45420018,
                        "jobStatusCode": 45550061,
                        "resourceTypeCode": 45500006,
                        "resourceStatusCode": 45540002,
                        "internalMachineId": 482910,
                        "externalMachineId": "M38019",
                        "internalAccessoryId": 509,
                        "externalAccessoryId": "A509",
                        "useCaseCode": 69510030,
                        "releasedByInternalEmployeeId": 920,
                        "releasedByExternalEmployeeId": "E920",
                        "releasedOnDateTime": "2022-12-23T15:34:05",
                        "handOver": {
                          "handoverId": 483915,
                          "jobId": 34451,
                          "internalEmployeeId": 341,
                          "externalEmployeeId": "E341",
                          "handoverCompletedDateTime": "2012-04-23T18:25:43.511Z",
                          "customerBriefed": true,
                          "comment": "customer already knows the machine very well",
                          "customerSignature": {
                            "signatureId": 0,
                            "signatureTypeCode": 45680002,
                            "signeeName": "Jerry Miller",
                            "signaturDocumentLink": {
                              "fileDocumentInternalId": 4738919,
                              "fileExternalArchiveId": "DC9301231",
                              "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                            }
                          }
                        },
                        "return": {
                          "returnId": 483915,
                          "jobId": 45612,
                          "internalEmployeeId": 345,
                          "externalEmployeeId": "E345",
                          "returnStartedDateTime": "2012-04-23T18:25:43.511Z",
                          "damage": false,
                          "comment": "very good condition, customer cleaned it and even replaced a missing screen wiper!"
                        },
                        "details": {
                          "scheduleList": [
                            {
                              "jobScheduleId": 32345,
                              "jobId": 1,
                              "sortNo": 100,
                              "description": "Loading",
                              "dateTime": "2022-12-01T07:30:00",
                              "isOccupied": true
                            }
                          ],
                          "contactList": [
                            {
                              "internalContactId": 34511,
                              "externalContactId": "KK34511",
                              "jobId": 84721,
                              "description": "construction site manager",
                              "fullName": "Frank Flintstone",
                              "phone": "+49 8745 951 18",
                              "eMail": "ff@customerdomain.com",
                              "isCustomer": true,
                              "isContactOnLocation": true
                            }
                          ],
                          "bookingActivityList": [
                            {
                              "bookingActivityId": 82091,
                              "activityCode": "45570018",
                              "activity": "Unloading",
                              "active": true
                            }
                          ],
                          "locationList": [
                            {
                              "locationId": 8392,
                              "description": "Construction Site, Gate 4",
                              "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
                              "address": {
                                "street": "Boca Chica Blvd.",
                                "houseNo": "52448",
                                "pOBox": "string",
                                "additionalLine1": "C/O Dr. Maria Smith",
                                "additionalLine2": "Environmental Dept / Building D2",
                                "country": "US",
                                "zipCode": "TX 78521",
                                "city": "Brownsville",
                                "latitude": 25.9850628,
                                "longitude": -97.1871375
                              }
                            }
                          ],
                          "documentList": [
                            {
                              "jobDocumentId": 583911,
                              "jobId": 452341,
                              "jobDocument": {
                                "fileDocumentInternalId": 4738919,
                                "fileExternalArchiveId": "DC9301231",
                                "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                              }
                            }
                          ],
                          "timeStampList": [
                            {
                              "jobTimestampId": 483915,
                              "jobId": 1,
                              "timestamp": "2012-04-23",
                              "timestampTypeCode": 45560001,
                              "bookingActivityId": 45570005,
                              "internalMachineId": 45123,
                              "externalMachineId": "MRK8938719",
                              "internalEmployeeId": 241,
                              "externalEmployeeId": "E492",
                              "comment": "took longer than expected due to mess at the construction site"
                            }
                          ],
                          "reportList": [
                            {
                              "reportId": 31234,
                              "reportFromDate": "2022-12-01",
                              "reportToDate": "2012-12-23",
                              "comment": "return was delayed due to traffic jam at our gates > not her fault!",
                              "reportTimeStampList": [
                                {
                                  "jobReportTimestampId": 483915,
                                  "jobId": 42341,
                                  "timestamp": "2012-04-23T07:31:20",
                                  "timestampTypeCode": 45560001,
                                  "source": "MobileApp",
                                  "bookingActivityId": 482012,
                                  "internalMachineId": 4021,
                                  "externalMachineId": "MRK8938719",
                                  "internalEmployeeId": 214,
                                  "externalEmployeeId": "E214",
                                  "comment": "optional remark on activity, such as why something took longer"
                                }
                              ],
                              "reportSurchargeList": [
                                {
                                  "reportSurchargeId": 483915,
                                  "jobSurchargeId": 483915,
                                  "jobId": 1,
                                  "reportId": 52671,
                                  "dateTime": "2022-12-23T17:25:43",
                                  "assignment": "RENTAL_HANDOVER",
                                  "quantity": 23.2
                                }
                              ],
                              "eMailNotificationList": [
                                {
                                  "eMailNotificationId": 1,
                                  "jobId": 45123,
                                  "reportId": 48192,
                                  "sender": "no-reply@mydomain.com",
                                  "sendDateTime": "2022-12-07T06:00:01",
                                  "createDateTime": "2022-12-06T08:35:54",
                                  "createdByInternalEmployeeId": 498,
                                  "createdByExternalEmployeeId": "E948",
                                  "modifyDateTime": "2022-12-06T12:00:20",
                                  "modifiedByInternalEmployeeId": 341,
                                  "modifiedByExternalEmployeeId": "E341"
                                }
                              ],
                              "signature": {
                                "signatureId": 0,
                                "signatureTypeCode": 45680002,
                                "signeeName": "Jerry Miller",
                                "signaturDocumentLink": {
                                  "fileDocumentInternalId": 4738919,
                                  "fileExternalArchiveId": "DC9301231",
                                  "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                                }
                              },
                              "reportPDF": {
                                "fileDocumentInternalId": 4738919,
                                "fileExternalArchiveId": "DC9301231",
                                "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                              }
                            }
                          ],
                          "surchargeList": [
                            {
                              "jobSurchargeId": 483915,
                              "surchargeId": 8739145,
                              "jobId": 82916,
                              "dateTime": "2012-04-23T18:25:43.511Z",
                              "assignment": "RENTAL_HANDOVER",
                              "quantity": 23.5,
                              "comment": "reason for quantity: additional gas can filled on customers request",
                              "reportId": 456223
                            }
                          ],
                          "problemList": [
                            {
                              "problemId": 583911,
                              "jobId": 452341,
                              "problemType": 0,
                              "description": "various impact dents on the left front side",
                              "impactOnConditionBool": false,
                              "visibleForCustomerBool": true,
                              "customersFaultBool": false,
                              "comment": "string",
                              "solvedBool": false,
                              "reportedByInternalEmployeeId": 363,
                              "reportedByExternalEmployeeId": "E465",
                              "reportedDateTime": "TS289182-5",
                              "reportingContext": "LEVA.JOB.HANDOVER",
                              "reportingContextText": "Custom Job Application",
                              "fixRequiredBool": false
                            }
                          ],
                          "transportDemandList": [
                            {
                              "transportDemandPositionId": 2512341,
                              "jobId": 51231,
                              "description": "Custom Fluid B028",
                              "details": "handle with care, keep up-side up at all times",
                              "unitOfMeasure": "Liter",
                              "decimalCount": 2,
                              "transportQuantity": 351.4,
                              "loadedQuantity": 351.5,
                              "unloadedQuantity": 351.4,
                              "loadingDateTime": "2022-12-30T13:30:09",
                              "loadingCheckmarkBool": false,
                              "unloadingDateTime": "2019-08-24T14:15:22Z",
                              "unloadingCheckmarkBool": false,
                              "pickupLocation": {
                                "street": "Boca Chica Blvd.",
                                "houseNo": "52448",
                                "pOBox": "string",
                                "additionalLine1": "C/O Dr. Maria Smith",
                                "additionalLine2": "Environmental Dept / Building D2",
                                "country": "US",
                                "zipCode": "TX 78521",
                                "city": "Brownsville",
                                "latitude": 25.9850628,
                                "longitude": -97.1871375
                              },
                              "deliveryLocation": {
                                "street": "Boca Chica Blvd.",
                                "houseNo": "52448",
                                "pOBox": "string",
                                "additionalLine1": "C/O Dr. Maria Smith",
                                "additionalLine2": "Environmental Dept / Building D2",
                                "country": "US",
                                "zipCode": "TX 78521",
                                "city": "Brownsville",
                                "latitude": 25.9850628,
                                "longitude": -97.1871375
                              },
                              "rentalJobId": 435123
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "includeDetails",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "boolean",
              "default": true
            },
            "description": "Wether or not to retrieve job details with this call"
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available jobs in the system.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/timestamps": {
      "get": {
        "summary": "Search for job timestamps",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTimeStamp"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobTimestampId": 483915,
                        "jobId": 1,
                        "timestamp": "2012-04-23",
                        "timestampTypeCode": 45560001,
                        "bookingActivityId": 45570005,
                        "internalMachineId": 45123,
                        "externalMachineId": "MRK8938719",
                        "internalEmployeeId": 241,
                        "externalEmployeeId": "E492",
                        "comment": "took longer than expected due to mess at the construction site"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsTimestamps",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available job time stamps in the system."
      },
      "parameters": [],
      "put": {
        "summary": "Modify job time stamps",
        "operationId": "PutSchedulingJobsTimestamps",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTimeStamp"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobTimestampId": 483915,
                        "jobId": 1,
                        "timestamp": "2012-04-23",
                        "timestampTypeCode": 45560001,
                        "bookingActivityId": 45570005,
                        "internalMachineId": 45123,
                        "externalMachineId": "MRK8938719",
                        "internalEmployeeId": 241,
                        "externalEmployeeId": "E492",
                        "comment": "took longer than expected due to mess at the construction site"
                      }
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTimeStamp"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/jobTimeStamp"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/jobTimeStamp"
                }
              }
            }
          },
          "description": "New or updated time stamps for JobId."
        },
        "description": "Updates an existing set of job time stamps for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/jobs/reports": {
      "get": {
        "summary": "Search for job reports",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobReport"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "reportId": 31234,
                        "reportFromDate": "2022-12-01",
                        "reportToDate": "2012-12-23",
                        "comment": "return was delayed due to traffic jam at our gates > not her fault!",
                        "reportTimeStampList": [
                          {
                            "jobReportTimestampId": 483915,
                            "jobId": 42341,
                            "timestamp": "2012-04-23T07:31:20",
                            "timestampTypeCode": 45560001,
                            "source": "MobileApp",
                            "bookingActivityId": 482012,
                            "internalMachineId": 4021,
                            "externalMachineId": "MRK8938719",
                            "internalEmployeeId": 214,
                            "externalEmployeeId": "E214",
                            "comment": "optional remark on activity, such as why something took longer"
                          }
                        ],
                        "reportSurchargeList": [
                          {
                            "reportSurchargeId": 483915,
                            "jobSurchargeId": 483915,
                            "jobId": 1,
                            "reportId": 52671,
                            "dateTime": "2022-12-23T17:25:43",
                            "assignment": "RENTAL_HANDOVER",
                            "quantity": 23.2
                          }
                        ],
                        "eMailNotificationList": [
                          {
                            "eMailNotificationId": 1,
                            "jobId": 45123,
                            "reportId": 48192,
                            "sender": "no-reply@mydomain.com",
                            "sendDateTime": "2022-12-07T06:00:01",
                            "createDateTime": "2022-12-06T08:35:54",
                            "createdByInternalEmployeeId": 498,
                            "createdByExternalEmployeeId": "E948",
                            "modifyDateTime": "2022-12-06T12:00:20",
                            "modifiedByInternalEmployeeId": 341,
                            "modifiedByExternalEmployeeId": "E341"
                          }
                        ],
                        "signature": {
                          "signatureId": 0,
                          "signatureTypeCode": 45680002,
                          "signeeName": "Jerry Miller",
                          "signaturDocumentLink": {
                            "fileDocumentInternalId": 4738919,
                            "fileExternalArchiveId": "DC9301231",
                            "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                          }
                        },
                        "reportPDF": {
                          "fileDocumentInternalId": 4738919,
                          "fileExternalArchiveId": "DC9301231",
                          "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsReports",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job reports in the system."
      },
      "post": {
        "summary": "Create job reports",
        "operationId": "PostSchedulingJobsReports",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobReport"
              }
            }
          },
          "description": "Submit a complete report.\nReports can not be altered by the interface after creation. Once a report is created it needs to be processed or deleted within leva+"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobReport"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "reportId": 31234,
                      "reportFromDate": "2022-12-01",
                      "reportToDate": "2012-12-23",
                      "comment": "return was delayed due to traffic jam at our gates > not her fault!",
                      "reportTimeStampList": [
                        {
                          "jobReportTimestampId": 483915,
                          "jobId": 42341,
                          "timestamp": "2012-04-23T07:31:20",
                          "timestampTypeCode": 45560001,
                          "source": "MobileApp",
                          "bookingActivityId": 482012,
                          "internalMachineId": 4021,
                          "externalMachineId": "MRK8938719",
                          "internalEmployeeId": 214,
                          "externalEmployeeId": "E214",
                          "comment": "optional remark on activity, such as why something took longer"
                        }
                      ],
                      "reportSurchargeList": [
                        {
                          "reportSurchargeId": 483915,
                          "jobSurchargeId": 483915,
                          "jobId": 1,
                          "reportId": 52671,
                          "dateTime": "2022-12-23T17:25:43",
                          "assignment": "RENTAL_HANDOVER",
                          "quantity": 23.2
                        }
                      ],
                      "eMailNotificationList": [
                        {
                          "eMailNotificationId": 1,
                          "jobId": 45123,
                          "reportId": 48192,
                          "sender": "no-reply@mydomain.com",
                          "sendDateTime": "2022-12-07T06:00:01",
                          "createDateTime": "2022-12-06T08:35:54",
                          "createdByInternalEmployeeId": 498,
                          "createdByExternalEmployeeId": "E948",
                          "modifyDateTime": "2022-12-06T12:00:20",
                          "modifiedByInternalEmployeeId": 341,
                          "modifiedByExternalEmployeeId": "E341"
                        }
                      ],
                      "signature": {
                        "signatureId": 0,
                        "signatureTypeCode": 45680002,
                        "signeeName": "Jerry Miller",
                        "signaturDocumentLink": {
                          "fileDocumentInternalId": 4738919,
                          "fileExternalArchiveId": "DC9301231",
                          "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                        }
                      },
                      "reportPDF": {
                        "fileDocumentInternalId": 4738919,
                        "fileExternalArchiveId": "DC9301231",
                        "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "tags": [
          "SchedulingJob"
        ],
        "description": "Submit a complete job report to leva+.\nAfter posting a job report, it can no longer be altered by the interface. Users on the leva+ backend may further process the posted job report and updates to job reports may be received using the GET operation."
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/handovers": {
      "get": {
        "summary": "Search for job handovers",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobHandOver"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "handoverId": 483915,
                        "jobId": 34451,
                        "internalEmployeeId": 341,
                        "externalEmployeeId": "E341",
                        "handoverCompletedDateTime": "2012-04-23T18:25:43.511Z",
                        "customerBriefed": true,
                        "comment": "customer already knows the machine very well",
                        "customerSignature": {
                          "signatureId": 0,
                          "signatureTypeCode": 45680002,
                          "signeeName": "Jerry Miller",
                          "signaturDocumentLink": {
                            "fileDocumentInternalId": 4738919,
                            "fileExternalArchiveId": "DC9301231",
                            "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsHandovers",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job handover in the system."
      },
      "put": {
        "summary": "Modify job handovers",
        "operationId": "PutSchedulingJobsHandovers",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobHandOver"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "handoverId": 483915,
                      "jobId": 34451,
                      "internalEmployeeId": 341,
                      "externalEmployeeId": "E341",
                      "handoverCompletedDateTime": "2012-04-23T18:25:43.511Z",
                      "customerBriefed": true,
                      "comment": "customer already knows the machine very well",
                      "customerSignature": {
                        "signatureId": 0,
                        "signatureTypeCode": 45680002,
                        "signeeName": "Jerry Miller",
                        "signaturDocumentLink": {
                          "fileDocumentInternalId": 4738919,
                          "fileExternalArchiveId": "DC9301231",
                          "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobHandOver"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing job handover for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/returns": {
      "get": {
        "summary": "Search for job returns",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobReturn"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "returnId": 483915,
                        "jobId": 45612,
                        "internalEmployeeId": 345,
                        "externalEmployeeId": "E345",
                        "returnStartedDateTime": "2012-04-23T18:25:43.511Z",
                        "damage": false,
                        "comment": "very good condition, customer cleaned it and even replaced a missing screen wiper!"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsReturns",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job return in the system."
      },
      "put": {
        "summary": "Modify job returns",
        "operationId": "PutSchedulingJobsReturns",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobReturn"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "returnId": 483915,
                      "jobId": 45612,
                      "internalEmployeeId": 345,
                      "externalEmployeeId": "E345",
                      "returnStartedDateTime": "2012-04-23T18:25:43.511Z",
                      "damage": false,
                      "comment": "very good condition, customer cleaned it and even replaced a missing screen wiper!"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobReturn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing job return for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/surcharges": {
      "get": {
        "summary": "Search for job surcharges",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobSurcharge"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobSurchargeId": 483915,
                        "surchargeId": 8739145,
                        "jobId": 82916,
                        "dateTime": "2012-04-23T18:25:43.511Z",
                        "assignment": "RENTAL_HANDOVER",
                        "quantity": 23.5,
                        "comment": "reason for quantity: additional gas can filled on customers request",
                        "reportId": 456223
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsSurcharges",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available job surchargess in the system."
      },
      "parameters": [],
      "put": {
        "summary": "Modify job surchages",
        "operationId": "PutSchedulingJobsSurcharges",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobSurcharge"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobSurchargeId": 483915,
                        "surchargeId": 8739145,
                        "jobId": 82916,
                        "dateTime": "2012-04-23T18:25:43.511Z",
                        "assignment": "RENTAL_HANDOVER",
                        "quantity": 23.5,
                        "comment": "reason for quantity: additional gas can filled on customers request",
                        "reportId": 456223
                      }
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobSurcharge"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job surcharges for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/jobs/problems": {
      "get": {
        "summary": "Search for job problems",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobProblem"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "problemId": 583911,
                        "jobId": 452341,
                        "problemType": 0,
                        "description": "various impact dents on the left front side",
                        "impactOnConditionBool": false,
                        "visibleForCustomerBool": true,
                        "customersFaultBool": false,
                        "comment": "string",
                        "solvedBool": false,
                        "reportedByInternalEmployeeId": 363,
                        "reportedByExternalEmployeeId": "E465",
                        "reportedDateTime": "TS289182-5",
                        "reportingContext": "LEVA.JOB.HANDOVER",
                        "reportingContextText": "Custom Job Application",
                        "fixRequiredBool": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "GetSchedulingJobsProblems",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job problems in the system."
      },
      "put": {
        "summary": "Modify job problems",
        "operationId": "PutSchedulingJobsProblems",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobProblem"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "problemId": 583911,
                        "jobId": 452341,
                        "problemType": 0,
                        "description": "various impact dents on the left front side",
                        "impactOnConditionBool": false,
                        "visibleForCustomerBool": true,
                        "customersFaultBool": false,
                        "comment": "string",
                        "solvedBool": false,
                        "reportedByInternalEmployeeId": 363,
                        "reportedByExternalEmployeeId": "E465",
                        "reportedDateTime": "TS289182-5",
                        "reportingContext": "LEVA.JOB.HANDOVER",
                        "reportingContextText": "Custom Job Application",
                        "fixRequiredBool": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobProblem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job problems for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/documents": {
      "get": {
        "summary": "Search for job documents",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobDocument"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobDocumentId": 583911,
                        "jobId": 452341,
                        "jobDocument": {
                          "fileDocumentInternalId": 4738919,
                          "fileExternalArchiveId": "DC9301231",
                          "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "operationId": "GetSchedulingJobsDocuments",
        "description": "By passing in the appropriate options, the service searches for job documents in the system."
      },
      "put": {
        "summary": "Modify job documents",
        "operationId": "PutSchedulingJobsDocuments",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobDocument"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "jobDocumentId": 583911,
                        "jobId": 452341,
                        "jobDocument": {
                          "fileDocumentInternalId": 4738919,
                          "fileExternalArchiveId": "DC9301231",
                          "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobDocument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job documents for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/transport-demands": {
      "get": {
        "summary": "Search for job transport demands",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTransportDemand"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "transportDemandPositionId": 2512341,
                        "jobId": 51231,
                        "description": "Custom Fluid B028",
                        "details": "handle with care, keep up-side up at all times",
                        "unitOfMeasure": "Liter",
                        "decimalCount": 2,
                        "transportQuantity": 351.4,
                        "loadedQuantity": 351.5,
                        "unloadedQuantity": 351.4,
                        "loadingDateTime": "2022-12-30T13:30:09",
                        "loadingCheckmarkBool": false,
                        "unloadingDateTime": "2019-08-24T14:15:22Z",
                        "unloadingCheckmarkBool": false,
                        "pickupLocation": {
                          "street": "Boca Chica Blvd.",
                          "houseNo": "52448",
                          "pOBox": "string",
                          "additionalLine1": "C/O Dr. Maria Smith",
                          "additionalLine2": "Environmental Dept / Building D2",
                          "country": "US",
                          "zipCode": "TX 78521",
                          "city": "Brownsville",
                          "latitude": 25.9850628,
                          "longitude": -97.1871375
                        },
                        "deliveryLocation": {
                          "street": "Boca Chica Blvd.",
                          "houseNo": "52448",
                          "pOBox": "string",
                          "additionalLine1": "C/O Dr. Maria Smith",
                          "additionalLine2": "Environmental Dept / Building D2",
                          "country": "US",
                          "zipCode": "TX 78521",
                          "city": "Brownsville",
                          "latitude": 25.9850628,
                          "longitude": -97.1871375
                        },
                        "rentalJobId": 435123
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "operationId": "GetSchedulingJobsTransportDemands",
        "description": "By passing in the appropriate options, the service searches for job transport demands in the system."
      },
      "put": {
        "summary": "Modify job transport demands",
        "operationId": "PutSchedulingJobsTransportDemands",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTransportDemand"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "transportDemandPositionId": 2512341,
                        "jobId": 51231,
                        "description": "Custom Fluid B028",
                        "details": "handle with care, keep up-side up at all times",
                        "unitOfMeasure": "Liter",
                        "decimalCount": 2,
                        "transportQuantity": 351.4,
                        "loadedQuantity": 351.5,
                        "unloadedQuantity": 351.4,
                        "loadingDateTime": "2022-12-30T13:30:09",
                        "loadingCheckmarkBool": false,
                        "unloadingDateTime": "2019-08-24T14:15:22Z",
                        "unloadingCheckmarkBool": false,
                        "pickupLocation": {
                          "street": "Boca Chica Blvd.",
                          "houseNo": "52448",
                          "pOBox": "string",
                          "additionalLine1": "C/O Dr. Maria Smith",
                          "additionalLine2": "Environmental Dept / Building D2",
                          "country": "US",
                          "zipCode": "TX 78521",
                          "city": "Brownsville",
                          "latitude": 25.9850628,
                          "longitude": -97.1871375
                        },
                        "deliveryLocation": {
                          "street": "Boca Chica Blvd.",
                          "houseNo": "52448",
                          "pOBox": "string",
                          "additionalLine1": "C/O Dr. Maria Smith",
                          "additionalLine2": "Environmental Dept / Building D2",
                          "country": "US",
                          "zipCode": "TX 78521",
                          "city": "Brownsville",
                          "latitude": 25.9850628,
                          "longitude": -97.1871375
                        },
                        "rentalJobId": 435123
                      }
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobTransportDemand"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job transport demands for a given Job Id.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": []
    },
    "/api/v3/scheduling/jobs/booking-activities": {
      "get": {
        "summary": "Search for booking activities on job",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/jobBookingActivity"
                  }
                },
                "examples": {
                  "example1": {
                    "value": [
                      {
                        "bookingActivityId": 82091,
                        "activityCode": "45570018",
                        "activity": "Unloading",
                        "active": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDatetime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (jobId, searchString).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Retrieve specific record by Id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "operationId": "GetSchedulingJobsBookingActivities",
        "description": "By passing in the appropriate options, the service searches for job booking activities in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "accessoryDisplayType": {
        "type": "string",
        "description": "possible type values:\n- `NONE`: Accessory without identification nor quantity\n- `IdENTIFICATION`: Accessory with identification\n- `QUANTITY`: Accessory with quantity",
        "title": "AccessoryDisplayType",
        "example": "NONE",
        "x-examples": {
          "example1": "NONE",
          "example2": "IDENTIFICATION"
        },
        "enum": [
          "NONE",
          "IDENTIFICATION",
          "QUANTITY"
        ]
      },
      "accessory": {
        "type": "object",
        "additionalProperties": false,
        "description": "accessory master data",
        "title": "Accessory",
        "x-examples": {
          "example1": {
            "changeId": 84702936,
            "changeDate": "2012-04-23",
            "accessoryId": 509,
            "externalAccessoryId": "A509",
            "origin": "BC365",
            "active": true,
            "description": "Wooden wedge",
            "accessoryDisplayType": "NONE",
            "numberOfItems": null,
            "identification": null,
            "branchCode": 45620000,
            "isExternalResource": false,
            "schedulingGroupCode": 45420010,
            "costCenterNo": "310",
            "ownerCompanyNo": 100,
            "additionalSchedulingGroupCode": [
              {
                "schedulingGroupCode": 45420010
              },
              {
                "schedulingGroupCode": 45420020
              }
            ]
          },
          "example2": {
            "changeId": 84702936,
            "changeDate": "2012-04-23",
            "accessoryId": 510,
            "externalAccessoryId": "A510",
            "origin": "BC365",
            "active": true,
            "description": "Wooden wedge",
            "accessoryDisplayType": "IDENTIFICATION",
            "numberOfItems": null,
            "identification": "A509-810271",
            "branchCode": 45620000,
            "isExternalResource": false,
            "schedulingGroupCode": 45420010,
            "costCenterNo": "310",
            "ownerCompanyNo": 100,
            "additionalSchedulingGroupCode": []
          },
          "example3": {
            "changeId": 84702936,
            "changeDate": "2012-04-23",
            "accessoryId": 511,
            "externalAccessoryId": "A511",
            "origin": "BC365",
            "active": true,
            "description": "Wooden wedge",
            "accessoryDisplayType": "QUANTITY",
            "numberOfItems": 5,
            "identification": null,
            "branchCode": 45620000,
            "isExternalResource": false,
            "schedulingGroupCode": 45420010,
            "costCenterNo": "310",
            "ownerCompanyNo": 100,
            "additionalSchedulingGroupCode": [
              {
                "schedulingGroupCode": 45420010
              }
            ]
          }
        },
        "properties": {
          "changeId": {
            "type": "integer",
            "maximum": 9999999999,
            "minimum": 1,
            "description": "changeId of the entity.",
            "format": "int64",
            "example": 84702936,
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "changeDate of the entity.",
            "format": "date",
            "example": "2012-04-23",
            "nullable": true,
            "readOnly": true
          },
          "accessoryId": {
            "type": "integer",
            "maximum": 9999999999,
            "minimum": 1,
            "description": "technical identification number of the accessory.",
            "format": "int64",
            "example": 509,
            "nullable": true
          },
          "externalAccessoryId": {
            "type": "string",
            "maxLength": 50,
            "description": "external technical identification number of the accessory - may be used instead of AccessoryId.",
            "example": "A509",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "origin of the entity.",
            "example": "BC365",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "is this accessory active or not.",
            "example": true,
            "default": true
          },
          "description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "accessory's name.",
            "example": "Wooden wedge"
          },
          "accessoryDisplayType": {
            "$ref": "#/components/schemas/accessoryDisplayType"
          },
          "numberOfItems": {
            "type": "integer",
            "description": "the exact number of available accessories.\nRequired when AccessoryDisplayType is set to `QUANTITY`.",
            "format": "int64",
            "example": 5,
            "nullable": true
          },
          "identification": {
            "type": "string",
            "maxLength": 200,
            "description": "identification or serial number of the accessory.\nRequired when AccessoryDisplayType is set to `IDENTIFICATION`.",
            "example": "A509-810271",
            "nullable": true
          },
          "branchCode": {
            "maximum": 45629999,
            "minimum": 45620000,
            "type": "integer",
            "description": "C4562 identification code of the branch to which the machine belongs to.",
            "format": "int64",
            "nullable": true
          },
          "isExternalResource": {
            "type": "boolean",
            "description": "a value indicating whether the resource is external.",
            "default": false
          },
          "schedulingGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the accessory's scheduling group that combines accessories of the same type and use\n(not necessarily the same model or manufacturer but can fullfil the same job requirements).",
            "format": "int64",
            "example": 45420010
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1,
            "description": "cost center for accessory",
            "example": "310",
            "nullable": true
          },
          "ownerCompanyNo": {
            "type": "integer",
            "maximum": 999999,
            "minimum": 1,
            "description": "the number of the company that owns the accessory.",
            "format": "int64",
            "example": 100,
            "nullable": true
          },
          "additionalSchedulingGroupCode": {
            "type": "array",
            "description": "list of additional scheduling groups. A scheduling group combines accessories of the same type and use\n(not necessarily the same model or manufacturer).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/schedulingGroupCode"
            }
          }
        },
        "required": [
          "description",
          "accessoryDisplayType",
          "isExternalResource",
          "schedulingGroupCode"
        ]
      },
      "address": {
        "type": "object",
        "additionalProperties": false,
        "description": "address format",
        "x-examples": {
          "example1": {
            "street": "Boca Chica Blvd.",
            "houseNo": "52448",
            "pOBox": null,
            "additionalLine1": "C/O Dr. Maria Smith",
            "additionalLine2": "Environmental Dept / Building D2",
            "country": "US",
            "zipCode": "TX 78521",
            "city": "Brownsville",
            "latitude": 25.9850628,
            "longitude": -97.1871375
          }
        },
        "title": "Address",
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 43,
            "description": "Street name without house number.",
            "example": "Boca Chica Blvd.",
            "nullable": true
          },
          "houseNo": {
            "type": "string",
            "maxLength": 12,
            "description": "House number",
            "example": "52448",
            "nullable": true
          },
          "pOBox": {
            "maxLength": 50,
            "type": "string",
            "description": "he post office box of the address. The P.O. Box should be transferred including the country-specific text component. For example, for Switzerland \\\"Postfach 12\\\" in England \\\"PO Box 12\\\".",
            "nullable": true
          },
          "additionalLine1": {
            "type": "string",
            "maxLength": 50,
            "description": "Additional line of an address which is neither a street nor a post office box. For example, \\\"c/o Samuel Schnelli\\\" or \\\"Office Samuel Schnelli\\\".",
            "example": "C/O Dr. Maria Smith",
            "nullable": true
          },
          "additionalLine2": {
            "type": "string",
            "maxLength": 200,
            "description": "Extended additional component of an address that is neither a street nor a post office box. For example, \\\"Floor 12\\\" or \\\"Building 15\\\".",
            "example": "Environmental Dept / Building D2",
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 2,
            "description": "Country in ISO code (ISO 3166)",
            "example": "US"
          },
          "zipCode": {
            "type": "string",
            "maxLength": 20,
            "description": "Zipcode of the address in country-specific format. Mandatory together with the country code and the city. For example, \\\"EC1A 1AA\\\" for London, England or \\\"9500\\\" for Wil, Switzerland.",
            "example": "TX 78521"
          },
          "city": {
            "type": "string",
            "maxLength": 40,
            "description": "city",
            "example": "Brownsville"
          },
          "latitude": {
            "type": "number",
            "maximum": 90,
            "minimum": -90,
            "description": "Location latitude",
            "format": "double",
            "example": 25.9850628,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "maximum": 180,
            "minimum": -180,
            "description": "Location longitude",
            "format": "double",
            "example": -97.1871375,
            "nullable": true
          }
        },
        "required": [
          "country",
          "zipCode",
          "city"
        ]
      },
      "applicationEntry": {
        "type": "string",
        "enum": [
          "B_HTR",
          "B_SE",
          "B_TS",
          "B_WKST"
        ],
        "description": "possible values are:\n- `B_HTR`: LEVA+\n- `B_SE`: Steine + Erden\n- `B_TS`: Treibstoff\n- `B_WKST`: Werkstatt",
        "title": "ApplicationEntry",
        "example": "B_HTR",
        "x-examples": {
          "example1": "B_HTR",
          "example2": "B_WKST"
        }
      },
      "application": {
        "type": "object",
        "additionalProperties": false,
        "description": "application usage that applies to context (machine / accessory or other records)",
        "x-examples": {
          "example1": {
            "application": "B_HTR"
          }
        },
        "title": "Application",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/applicationEntry"
          }
        },
        "required": [
          "application"
        ]
      },
      "machineCounter": {
        "required": [
          "counterTypeCode"
        ],
        "type": "object",
        "properties": {
          "counterTypeCode": {
            "maximum": 45489999,
            "minimum": 45480000,
            "type": "integer",
            "description": "C4548 code of the counter type used in the machine, e.g. km, hours of operation.",
            "format": "int64",
            "example": 45480010
          },
          "account": {
            "maxLength": 10,
            "type": "string",
            "description": "Account to post the counters against.",
            "nullable": true,
            "example": "4711"
          }
        },
        "additionalProperties": false,
        "description": "machine's counter",
        "title": "MachineCounter",
        "x-examples": {
          "example1": {
            "counterTypeCode": 45480010,
            "account": "4711"
          }
        }
      },
      "schedulingGroupCode": {
        "required": [
          "schedulingGroupCode"
        ],
        "type": "object",
        "properties": {
          "schedulingGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the machine grouping that combines machines of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "format": "int64",
            "example": 45420010
          }
        },
        "additionalProperties": false,
        "description": "machine's additional scheduling group",
        "title": "SchedulingGroupCode",
        "x-examples": {
          "example1": {
            "schedulingGroupCode": 45420010
          }
        }
      },
      "fileDocumentLink": {
        "type": "object",
        "additionalProperties": false,
        "title": "FileDocumentLink",
        "description": "provides a link to a saved document. this structure is used to attach/link previously saved attachments to the application context. e.g. a photo made on a mobile device is saved to performis and then linked/attached to a job as a job document.",
        "x-examples": {
          "example1": {
            "fileDocumentInternalId": 4738919,
            "fileExternalArchiveId": "DC9301231",
            "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
          }
        },
        "properties": {
          "fileDocumentInternalId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 4738919,
            "nullable": true
          },
          "fileExternalArchiveId": {
            "type": "string",
            "maxLength": 20,
            "example": "DC9301231",
            "nullable": true
          },
          "fileDocumentGuid": {
            "type": "string",
            "example": "fa5df08c-f483-4dfc-be0e-9ad8a3127154",
            "nullable": true
          }
        }
      },
      "machineDriver": {
        "type": "object",
        "properties": {
          "driverBpId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner ID of the driver.",
            "format": "int64",
            "nullable": true,
            "example": 57689
          },
          "externalDriverBpId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External business partner ID of the driver - may be used instead of DriverBpId.",
            "nullable": true,
            "example": "ABC-12345"
          }
        },
        "additionalProperties": false,
        "description": "a machine's driver (linking by Id)",
        "title": "MachineDriver",
        "x-examples": {
          "example1": {
            "driverBpId": 57689,
            "externalDriverBpId": "ABC-12345"
          }
        }
      },
      "machine": {
        "required": [
          "active",
          "description",
          "isExternalResource",
          "machineGUID",
          "machineModelCode",
          "placingOnMarket"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeId of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "machineId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal technical key for the machine.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "externalMachineId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External technical key for machine - may be used instead of MachineId.",
            "nullable": true,
            "example": "ABC-4711"
          },
          "origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Sets whether or not the machine may be used in LEVA+.",
            "example": true
          },
          "description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Description (e.g. name, type, number) of the machine.",
            "example": "Genie RS-1932, Blue Version"
          },
          "placingOnMarket": {
            "type": "string",
            "description": "Date when the machine was first registered and used in the business. Important for service dates etc.",
            "format": "date",
            "example": "2022-01-11"
          },
          "machineTypeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification number for MachineType.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "externalMachineTypeId": {
            "maxLength": 50,
            "type": "string",
            "description": "External identification number for MachineType\r\n- may be used instead of the MachineTypeId.",
            "nullable": true,
            "example": "ABC4711"
          },
          "machineGUId": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for a machine. Used for communication with third party systems.",
            "example": "87315090-9a06-4edc-8fc5-f9f68972e3c6"
          },
          "machineNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification number for a single machine.",
            "format": "int64",
            "nullable": true,
            "example": 87315
          },
          "acquisitionDate": {
            "type": "string",
            "description": "The date the machine was acquired.",
            "format": "date",
            "nullable": true,
            "example": "2022-11-25"
          },
          "underWarrantyUntil": {
            "type": "string",
            "description": "The warranty expiry date.",
            "format": "date",
            "nullable": true,
            "example": "2028-11-11"
          },
          "manufacturerCode": {
            "maximum": 45439999,
            "minimum": 45430000,
            "type": "integer",
            "description": "C4543 code of the machine manufacturer.",
            "format": "int64",
            "nullable": true,
            "example": 45430010
          },
          "masterNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "A master number is used to assign and identify the vehicle.",
            "nullable": true,
            "example": "325.752.721"
          },
          "chassisNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Chassis number of this vehicle.",
            "nullable": true,
            "example": "WMG6315L4FZ010120"
          },
          "engineNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "The number on the engine.",
            "nullable": true,
            "example": "D - 0 000 123"
          },
          "typeCertificateNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Official number for identification of the vehicle type by external entities.",
            "nullable": true,
            "example": "123123"
          },
          "licensePlate": {
            "maxLength": 20,
            "type": "string",
            "description": "Number on the licence plate.",
            "nullable": true,
            "example": "BE 1000"
          },
          "wikiUrl": {
            "maxLength": 200,
            "type": "string",
            "description": "URL to information portal.",
            "nullable": true
          },
          "ownerCompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of the holder company.",
            "format": "int64",
            "nullable": true,
            "example": 1235
          },
          "assetNo": {
            "maxLength": 16,
            "type": "string",
            "description": "Accounting asset number.",
            "nullable": true,
            "example": "1546"
          },
          "ownerBpAddrId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the owner.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "externalOwnerBpAddrId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the owner.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "locationBpAddrId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the location.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "externalLocationBpAddrId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the location.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "invoiceBpAddrId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the customer to invoice.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "externalInvoiceBpAddrId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the customer to invoice.",
            "nullable": true,
            "example": "ABC-123451"
          },
          "regularDriverBpId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner ID of the regular driver.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "externalRegularDriverBpId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External business partner ID of the regular driver.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "counterGroupCode": {
            "maximum": 45469999,
            "minimum": 45460000,
            "type": "integer",
            "description": "C4546 code of the counter group.",
            "format": "int64",
            "nullable": true,
            "example": 45460010
          },
          "standardTrailerMachineId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "The identification number of the semi-trailer that is usually coupled with this machine.",
            "format": "int64",
            "nullable": true,
            "example": 5679
          },
          "externalStandardTrailerMachineId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "integer",
            "description": "The external identification number of the semi-trailer that is usually coupled with this machine.",
            "format": "int64",
            "nullable": true
          },
          "machineModelCode": {
            "maximum": 45419999,
            "minimum": 45410000,
            "type": "integer",
            "description": "C4541 code of the machine model, e.g. crane.",
            "format": "int64",
            "example": 45410010
          },
          "branchCode": {
            "maximum": 45629999,
            "minimum": 45620000,
            "type": "integer",
            "description": "C4562 identification code of the branch to which the machine belongs.",
            "format": "int64",
            "nullable": true,
            "example": 45620010
          },
          "isExternalResource": {
            "type": "boolean",
            "description": "Is this machine an external resource?"
          },
          "yearOfManufacture": {
            "type": "integer",
            "description": "The year in which the machine was built.",
            "format": "int64",
            "nullable": true,
            "example": 2020
          },
          "schedulingGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the machine disposition type.",
            "format": "int64",
            "nullable": true,
            "example": 45420010
          },
          "locationApiKey": {
            "maxLength": 50,
            "type": "string",
            "description": "API key to access location service for the machine.",
            "nullable": true
          },
          "isMachineLocationSyncEnabled": {
            "type": "boolean",
            "description": "Whether or not the machines location is automatically synced.",
            "nullable": true
          },
          "manufacturerApiCode": {
            "maximum": 33069999,
            "minimum": 33060000,
            "type": "integer",
            "description": "C3306 code of the used location API connector.",
            "format": "int64",
            "nullable": true,
            "example": 33060010
          },
          "engineType": {
            "maxLength": 200,
            "type": "string",
            "description": "What type of engine does the machine have.",
            "nullable": true,
            "example": "Diesel"
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Number of the cost center this machine is billed internally to.",
            "nullable": true,
            "example": "56789"
          },
          "telematicsDeviceGroupCode": {
            "maximum": 33369999,
            "minimum": 33360000,
            "type": "integer",
            "description": "C3336 code defining which telematics system the machine uses.",
            "format": "int64",
            "nullable": true,
            "example": 33360010
          },
          "lastYearlyService": {
            "type": "string",
            "description": "Date of the machine's last yearly service.",
            "format": "date",
            "nullable": true,
            "example": "2023-01-12"
          },
          "typeOfDrives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typeOfDrive"
            },
            "description": "List of type of drives of the machine.",
            "nullable": true
          },
          "schedulingGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schedulingGroupCode"
            },
            "description": "List of additional disposition groups. A disposition group combines machines of the same type and use\r\n(not necessarily the same model or manufacturer). (E.g. a 20m boom, might be sold as 12m boom).",
            "nullable": true
          },
          "machineDrivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/machineDriver"
            },
            "description": "List of the business partner Ids of the driver/s that can use this machine.",
            "nullable": true
          },
          "machineCounters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/machineCounter"
            },
            "description": "List of counters of the machine.",
            "nullable": true
          },
          "machineUsages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/application"
            },
            "description": "List of applications this machine is used in.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "machine master data",
        "title": "Machine",
        "x-examples": {}
      },
      "machineType": {
        "required": [
          "active",
          "description"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeId of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "machineTypeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical identification of the machine type.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "externalMachineTypeId": {
            "maxLength": 50,
            "type": "string",
            "description": "External identification of the machine type - may be used instead of the MachineTypeId.",
            "nullable": true,
            "example": "ABC4711"
          },
          "origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Is the machine type active or not?"
          },
          "description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Name or designation of the associated machine type.",
            "example": "Genie-GS 1432"
          },
          "manufacturerSeries": {
            "maxLength": 100,
            "type": "string",
            "description": "Which machine type series does the machine belong to?",
            "nullable": true,
            "example": "GS-1432"
          },
          "suppliersBusinessBpAddrId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the supplier.",
            "format": "int64",
            "nullable": true,
            "example": 3244
          },
          "externalSuppliersBusinessBpAddrId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the supplier.",
            "nullable": true,
            "example": "ABC-12345"
          }
        },
        "additionalProperties": false,
        "description": "machine type master data",
        "title": "MachineType",
        "x-examples": {}
      },
      "maintenanceWindow": {
        "type": "object",
        "additionalProperties": false,
        "title": "maintenanceWindow",
        "description": "information structure for active maintenance windows",
        "x-examples": {
          "example1": {
            "id": 3511,
            "active": true,
            "fromDateTime": "2019-08-24T14:15:22Z",
            "toDateTime": "2019-08-24T14:15:22Z",
            "info": "monthly maintenance for patch installation",
            "clientStartAllowed": false
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 3511,
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started."
          },
          "fromDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "start of scheduled maintenance window"
          },
          "toDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "end of scheduled maintenance window"
          },
          "info": {
            "type": "string",
            "example": "monthly maintenance for patch installation",
            "nullable": true
          },
          "clientStartAllowed": {
            "type": "boolean",
            "default": false,
            "description": "defines wether or not clients may continue to work while the maintenance window applies."
          }
        }
      },
      "problemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "title": "problemDetails",
        "description": "",
        "x-examples": {}
      },
      "signature": {
        "type": "object",
        "description": "signature details when available. If not provided: a report, handover or return is considered un-signed.",
        "title": "Signature",
        "properties": {
          "signatureId": {
            "type": "number",
            "description": "signature Id. leave empty when creating a new signature entry.",
            "nullable": true
          },
          "signatureTypeCode": {
            "type": "number",
            "description": "Code 4568.\n45680001 - employee\n45680002 - customer (report)\n45680003 - customer (handover)\n45680004 - customer (return)",
            "example": 45680002
          },
          "signeeName": {
            "type": "string",
            "description": "Person who is signing the document. Preferably full name.",
            "example": "Jerry Miller"
          },
          "signaturDocumentLink": {
            "$ref": "#/components/schemas/fileDocumentLink"
          }
        },
        "required": [
          "signatureTypeCode"
        ],
        "x-examples": {
          "example1": {
            "signatureId": 541,
            "signatureTypeCode": 45680002,
            "signeeName": "Jerry Miller",
            "signaturDocumentLink": {
              "fileDocumentInternalId": 4738919,
              "fileExternalArchiveId": "DC9301231",
              "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
            }
          }
        }
      },
      "surcharge": {
        "title": "Surcharge",
        "type": "object",
        "description": "Surcharge master data",
        "x-examples": {
          "example1": {
            "surchargeId": 483915,
            "description": "additional cleaning",
            "priceUnitOfMeasure": "PCE",
            "sortNo": 1000,
            "suggestedQuantity": 1,
            "suggestedOnRentalHandover": false,
            "suggestedOnRentalReturn": false
          }
        },
        "properties": {
          "internalSurchargeId": {
            "type": "integer",
            "format": "int32",
            "description": "internal unique identifier for surcharge master data entry",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "externalSurchargeId": {
            "format": "int32",
            "description": "external unique identifier for surcharge master data entry",
            "example": "483915EXT",
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "title / name of the surcharge",
            "example": "additional cleaning"
          },
          "priceUnitOfMeasure": {
            "type": "string",
            "description": "unit of measure in which quantities for must be submitted",
            "example": "PCE"
          },
          "sortNo": {
            "type": "number",
            "format": "float",
            "description": "a sort number order of the surcharge when being displayed (ascending)",
            "example": 1000
          },
          "suggestedQuantity": {
            "type": "number",
            "format": "double",
            "description": "a quantity in PriceUnitOfMeasure that is usually suggested for this surcharge, so that users must not manually input common a common quantity",
            "example": 1
          },
          "suggestedOnRentalHandover": {
            "type": "boolean",
            "description": "wether or not this surcharge is suggested on rental handovers (e.g. additional instruction or placement)",
            "default": false
          },
          "suggestedOnRentalReturn": {
            "type": "boolean",
            "description": "wether or not this surcharge is suggested on rental returns (e.g. cleaning)",
            "default": false
          }
        }
      },
      "typeOfDrive": {
        "type": "string",
        "enum": [
          "B",
          "H",
          "D",
          "E"
        ],
        "description": "Typ of drive values.\r\n- `B`: Petrol\r\n- `H`: Hybrid\r\n- `D`: Diesel\r\n- `E`: Electric",
        "title": "TypeOfDrive",
        "example": "B",
        "x-examples": {
          "example1": "B"
        }
      },
      "job": {
        "title": "Job",
        "type": "object",
        "description": "scheduling job. can be of any job (rental, transport, service, ...)\nNOTE: may include or exclude the Details subset based on property DetailsIncluded.",
        "x-examples": {
          "example1": {
            "companyNo": 100,
            "jobId": 37281,
            "detailsIncluded": false,
            "reportEMailReceivers": "jack.smith@customerdomain.com; sarah.root@customermail.com",
            "languageIsoCode": "US",
            "internalEmployeeId": 3829,
            "externalEmployeeId": "E839",
            "orderNo": "A827109",
            "orderTitle": "support on construction site A-51",
            "jobDateTimeFrom": "2022-12-01T07:00:00",
            "jobDateTimeTo": "2022-12-23T15:00:00",
            "primaryJobLocation": {
              "locationId": 8392,
              "description": "Construction Site, Gate 4",
              "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
              "address": {
                "street": "Boca Chica Blvd.",
                "houseNo": "52448",
                "pOBox": "string",
                "additionalLine1": "C/O Dr. Maria Smith",
                "additionalLine2": "Environmental Dept / Building D2",
                "country": "US",
                "zipCode": "TX 78521",
                "city": "Brownsville",
                "latitude": 25.9850628,
                "longitude": -97.1871375
              }
            },
            "resourceNo": 84739,
            "schedulingGroupCode": 45420018,
            "jobStatusCode": 45550061,
            "resourceTypeCode": 45500006,
            "resourceStatusCode": 45540002,
            "internalMachineId": 482910,
            "externalMachineId": "M38019",
            "internalAccessoryId": 509,
            "externalAccessoryId": "A509",
            "useCaseCode": 69510030,
            "releasedByInternalEmployeeId": 920,
            "releasedByExternalEmployeeId": "E920",
            "releasedOnDateTime": "2022-12-23T15:34:05",
            "handOver": {
              "handoverId": 483915,
              "jobId": 34451,
              "internalEmployeeId": 341,
              "externalEmployeeId": "E341",
              "handoverCompletedDateTime": "2012-04-23T18:25:43.511Z",
              "customerBriefed": true,
              "comment": "customer already knows the machine very well",
              "customerSignature": {
                "signatureId": 0,
                "signatureTypeCode": 45680002,
                "signeeName": "Jerry Miller",
                "signaturDocumentLink": {
                  "fileDocumentInternalId": 4738919,
                  "fileExternalArchiveId": "DC9301231",
                  "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                }
              }
            },
            "return": {
              "returnId": 483915,
              "jobId": 45612,
              "internalEmployeeId": 345,
              "externalEmployeeId": "E345",
              "returnStartedDateTime": "2012-04-23T18:25:43.511Z",
              "damage": false,
              "comment": "very good condition, customer cleaned it and even replaced a missing screen wiper!"
            },
            "details": {
              "scheduleList": [
                {
                  "jobScheduleId": 32345,
                  "jobId": 1,
                  "sortNo": 100,
                  "description": "Loading",
                  "dateTime": "2022-12-01T07:30:00",
                  "isOccupied": true
                }
              ],
              "contactList": [
                {
                  "internalContactId": 34511,
                  "externalContactId": "KK34511",
                  "jobId": 84721,
                  "description": "construction site manager",
                  "fullName": "Frank Flintstone",
                  "phone": "+49 8745 951 18",
                  "eMail": "ff@customerdomain.com",
                  "isCustomer": true,
                  "isContactOnLocation": true
                }
              ],
              "bookingActivityList": [
                {
                  "bookingActivityId": 82091,
                  "activityCode": "45570018",
                  "activity": "Unloading",
                  "active": true
                }
              ],
              "locationList": [
                {
                  "locationId": 8392,
                  "description": "Construction Site, Gate 4",
                  "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
                  "address": {
                    "street": "Boca Chica Blvd.",
                    "houseNo": "52448",
                    "pOBox": "string",
                    "additionalLine1": "C/O Dr. Maria Smith",
                    "additionalLine2": "Environmental Dept / Building D2",
                    "country": "US",
                    "zipCode": "TX 78521",
                    "city": "Brownsville",
                    "latitude": 25.9850628,
                    "longitude": -97.1871375
                  }
                }
              ],
              "documentList": [
                {
                  "jobDocumentId": 583911,
                  "jobId": 452341,
                  "jobDocument": {
                    "fileDocumentInternalId": 4738919,
                    "fileExternalArchiveId": "DC9301231",
                    "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                  }
                }
              ],
              "timeStampList": [
                {
                  "jobTimestampId": 483915,
                  "jobId": 1,
                  "timestamp": "2012-04-23",
                  "timestampTypeCode": 45560001,
                  "bookingActivityId": 45570005,
                  "internalMachineId": 45123,
                  "externalMachineId": "MRK8938719",
                  "internalEmployeeId": 241,
                  "externalEmployeeId": "E492",
                  "comment": "took longer than expected due to mess at the construction site"
                }
              ],
              "reportList": [
                {
                  "reportId": 31234,
                  "reportFromDate": "2022-12-01",
                  "reportToDate": "2012-12-23",
                  "comment": "return was delayed due to traffic jam at our gates > not her fault!",
                  "reportTimeStampList": [
                    {
                      "jobReportTimestampId": 483915,
                      "jobId": 42341,
                      "timestamp": "2012-04-23T07:31:20",
                      "timestampTypeCode": 45560001,
                      "source": "MobileApp",
                      "bookingActivityId": 482012,
                      "internalMachineId": 4021,
                      "externalMachineId": "MRK8938719",
                      "internalEmployeeId": 214,
                      "externalEmployeeId": "E214",
                      "comment": "optional remark on activity, such as why something took longer"
                    }
                  ],
                  "reportSurchargeList": [
                    {
                      "reportSurchargeId": 483915,
                      "jobSurchargeId": 483915,
                      "jobId": 1,
                      "reportId": 52671,
                      "dateTime": "2022-12-23T17:25:43",
                      "assignment": "RENTAL_HANDOVER",
                      "quantity": 23.2
                    }
                  ],
                  "eMailNotificationList": [
                    {
                      "eMailNotificationId": 1,
                      "jobId": 45123,
                      "reportId": 48192,
                      "sender": "no-reply@mydomain.com",
                      "sendDateTime": "2022-12-07T06:00:01",
                      "createDateTime": "2022-12-06T08:35:54",
                      "createdByInternalEmployeeId": 498,
                      "createdByExternalEmployeeId": "E948",
                      "modifyDateTime": "2022-12-06T12:00:20",
                      "modifiedByInternalEmployeeId": 341,
                      "modifiedByExternalEmployeeId": "E341"
                    }
                  ],
                  "signature": {
                    "signatureId": 0,
                    "signatureTypeCode": 45680002,
                    "signeeName": "Jerry Miller",
                    "signaturDocumentLink": {
                      "fileDocumentInternalId": 4738919,
                      "fileExternalArchiveId": "DC9301231",
                      "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                    }
                  },
                  "reportPDF": {
                    "fileDocumentInternalId": 4738919,
                    "fileExternalArchiveId": "DC9301231",
                    "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                  }
                }
              ],
              "surchargeList": [
                {
                  "jobSurchargeId": 483915,
                  "surchargeId": 8739145,
                  "jobId": 82916,
                  "dateTime": "2012-04-23T18:25:43.511Z",
                  "assignment": "RENTAL_HANDOVER",
                  "quantity": 23.5,
                  "comment": "reason for quantity: additional gas can filled on customers request",
                  "reportId": 456223
                }
              ],
              "formList": [
                {
                  "wIP": "string"
                }
              ],
              "problemList": [
                {
                  "problemId": 583911,
                  "jobId": 452341,
                  "problemType": 0,
                  "description": "various impact dents on the left front side",
                  "impactOnConditionBool": false,
                  "visibleForCustomerBool": true,
                  "customersFaultBool": false,
                  "comment": "string",
                  "solvedBool": false,
                  "reportedByInternalEmployeeId": 363,
                  "reportedByExternalEmployeeId": "E465",
                  "reportedDateTime": "TS289182-5",
                  "reportingContext": "LEVA.JOB.HANDOVER",
                  "reportingContextText": "Custom Job Application",
                  "fixRequiredBool": false
                }
              ],
              "transportDemandList": [
                {
                  "transportDemandPositionId": 2512341,
                  "jobId": 51231,
                  "description": "Custom Fluid B028",
                  "details": "handle with care, keep up-side up at all times",
                  "unitOfMeasure": "Liter",
                  "decimalCount": 2,
                  "transportQuantity": 351.4,
                  "loadedQuantity": 351.5,
                  "unloadedQuantity": 351.4,
                  "loadingDateTime": "2022-12-30T13:30:09",
                  "loadingCheckmarkBool": false,
                  "unloadingDateTime": "2019-08-24T14:15:22Z",
                  "unloadingCheckmarkBool": false,
                  "pickupLocation": {
                    "street": "Boca Chica Blvd.",
                    "houseNo": "52448",
                    "pOBox": "string",
                    "additionalLine1": "C/O Dr. Maria Smith",
                    "additionalLine2": "Environmental Dept / Building D2",
                    "country": "US",
                    "zipCode": "TX 78521",
                    "city": "Brownsville",
                    "latitude": 25.9850628,
                    "longitude": -97.1871375
                  },
                  "deliveryLocation": {
                    "street": "Boca Chica Blvd.",
                    "houseNo": "52448",
                    "pOBox": "string",
                    "additionalLine1": "C/O Dr. Maria Smith",
                    "additionalLine2": "Environmental Dept / Building D2",
                    "country": "US",
                    "zipCode": "TX 78521",
                    "city": "Brownsville",
                    "latitude": 25.9850628,
                    "longitude": -97.1871375
                  },
                  "rentalJobId": 435123
                }
              ]
            }
          }
        },
        "properties": {
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "the number of the company that this entry is assigned to",
            "format": "int64",
            "example": 100,
            "nullable": true
          },
          "jobId": {
            "type": "number",
            "maximum": 9999999999,
            "minimum": 1,
            "example": 37281,
            "description": "Job ID of performis / leva+. will be set internally - leave empty if not known.",
            "nullable": true
          },
          "detailsIncluded": {
            "type": "boolean",
            "example": true,
            "description": "reflects the requesting parameter on wether or not the dataset includes the Details property.\n\nunclude the details only, when necessary. Use the requesting parameter to avoid unnecessary loads.",
            "default": false
          },
          "reportEMailReceivers": {
            "type": "string",
            "description": "; or , seperated string of e-mail addresses to receive a report copy.\n\nNote: these addresses are set in the order header and proposed to receive a report copy. Wether or not they actually receive a report copy, is controlled by the ReportEMailNotifications submitted with the report.",
            "example": "jack.smith@customerdomain.com; sarah.root@customermail.com",
            "nullable": true
          },
          "languageIsoCode": {
            "type": "string",
            "description": "two digit language code (639-1)",
            "example": "US",
            "nullable": true
          },
          "internalEmployeeId": {
            "type": "number",
            "example": 3829,
            "description": "internal employee ID to which the job is assigned to",
            "nullable": true
          },
          "externalEmployeeId": {
            "type": "string",
            "example": "E839",
            "description": "external employee ID to which the job is assigned to",
            "nullable": true
          },
          "orderNo": {
            "type": "string",
            "example": "A827109"
          },
          "orderTitle": {
            "type": "string",
            "example": "support on construction site A-51"
          },
          "jobDateTimeFrom": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled start date and time for this job",
            "example": "2022-12-01T07:00:00"
          },
          "jobDateTimeTo": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled end date and time for this job",
            "example": "2022-12-23T15:00:00"
          },
          "primaryJobLocation": {
            "$ref": "#/components/schemas/jobLocation"
          },
          "resourceNo": {
            "type": "number",
            "format": "date-time",
            "description": "the resource demand number to which this job is assigned to.\n\neach order can have multiple resource demands. they are numbered 0001 onwards and are unique within the order. (similar to order-line position no., but for resource demands)",
            "example": 84739
          },
          "schedulingGroupCode": {
            "type": "number",
            "description": "Code 4542\nuse IF2BA to retrieve value list.",
            "example": 45420018
          },
          "jobStatusCode": {
            "type": "number",
            "description": "Code 4555\nuse IF2BA to retrieve value list.",
            "example": 45550061
          },
          "resourceTypeCode": {
            "type": "number",
            "format": "date-time",
            "description": "Code 4550\nuse IF2BA to retrieve value list.",
            "example": 45500006
          },
          "resourceStatusCode": {
            "type": "number",
            "description": "Code 4554\nuse IF2BA to retrieve value list.",
            "example": 45540002
          },
          "internalMachineId": {
            "type": "number",
            "description": "internal maschine ID assigned to job",
            "example": 482910,
            "nullable": true
          },
          "externalMachineId": {
            "type": "string",
            "description": "external machine ID assigned to job",
            "example": "M38019",
            "nullable": true
          },
          "internalAccessoryId": {
            "type": "number",
            "format": "date-time",
            "description": "internal accessory ID assigned to job",
            "example": 509,
            "nullable": true
          },
          "externalAccessoryId": {
            "type": "string",
            "description": "external accessory ID assigned to job",
            "example": "A509",
            "nullable": true
          },
          "useCaseCode": {
            "type": "number",
            "description": "Code 6951\nuse IF2BA to retrieve value list.",
            "example": 69510030
          },
          "releasedByInternalEmployeeId": {
            "type": "number",
            "description": "internal Employee ID who notified that the machine ressource to be available for scheduling again.",
            "example": 920,
            "nullable": true
          },
          "releasedByExternalEmployeeId": {
            "type": "string",
            "description": "external Employee ID who notified that the machine ressource to be available for scheduling again.",
            "example": "E920",
            "nullable": true
          },
          "releasedOnDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "DateTime of notification on which the machine ressource is made available for scheduling again. (The  maschine is no longer needed on the job)\n\nNULLas long as the resource is still being used.",
            "example": "2022-12-23T15:34:05",
            "nullable": true
          },
          "handOver": {
            "$ref": "#/components/schemas/jobHandOver"
          },
          "return": {
            "$ref": "#/components/schemas/jobReturn"
          },
          "details": {
            "$ref": "#/components/schemas/jobDetails"
          }
        },
        "required": [
          "companyNo",
          "detailsIncluded",
          "orderNo",
          "orderTitle",
          "jobDateTimeFrom",
          "jobDateTimeTo",
          "primaryJobLocation",
          "resourceNo",
          "schedulingGroupCode",
          "jobStatusCode",
          "resourceTypeCode",
          "resourceStatusCode",
          "useCaseCode"
        ]
      },
      "jobDetails": {
        "title": "JobDetails",
        "description": "detail information on a job such as scheduled activities, contacts and locations.\nNOTE: may be empty if not specifically requested (see Job request parameters and properties)",
        "x-examples": {
          "example1": {
            "scheduleList": [
              {
                "jobScheduleId": 32345,
                "jobId": 1,
                "sortNo": 100,
                "description": "Loading",
                "dateTime": "2022-12-01T07:30:00",
                "isOccupied": true
              }
            ],
            "contactList": [
              {
                "internalContactId": 34511,
                "externalContactId": "KK34511",
                "jobId": 84721,
                "description": "construction site manager",
                "fullName": "Frank Flintstone",
                "phone": "+49 8745 951 18",
                "eMail": "ff@customerdomain.com",
                "isCustomer": true,
                "isContactOnLocation": true
              }
            ],
            "bookingActivityList": [
              {
                "bookingActivityId": 82091,
                "activityCode": "45570018",
                "activity": "Unloading",
                "active": true
              }
            ],
            "locationList": [
              {
                "locationId": 8392,
                "description": "Construction Site, Gate 4",
                "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
                "address": {
                  "street": "Boca Chica Blvd.",
                  "houseNo": "52448",
                  "pOBox": "string",
                  "additionalLine1": "C/O Dr. Maria Smith",
                  "additionalLine2": "Environmental Dept / Building D2",
                  "country": "US",
                  "zipCode": "TX 78521",
                  "city": "Brownsville",
                  "latitude": 25.9850628,
                  "longitude": -97.1871375
                }
              }
            ],
            "documentList": [
              {
                "jobDocumentId": 583911,
                "jobId": 452341,
                "jobDocument": {
                  "fileDocumentInternalId": 4738919,
                  "fileExternalArchiveId": "DC9301231",
                  "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                }
              }
            ],
            "timeStampList": [
              {
                "jobTimestampId": 483915,
                "jobId": 1,
                "timestamp": "2012-04-23",
                "timestampTypeCode": 45560001,
                "bookingActivityId": 45570005,
                "internalMachineId": 45123,
                "externalMachineId": "MRK8938719",
                "internalEmployeeId": 241,
                "externalEmployeeId": "E492",
                "comment": "took longer than expected due to mess at the construction site"
              }
            ],
            "reportList": [
              {
                "reportId": 31234,
                "reportFromDate": "2022-12-01",
                "reportToDate": "2012-12-23",
                "comment": "return was delayed due to traffic jam at our gates > not her fault!",
                "reportTimeStampList": [
                  {
                    "jobReportTimestampId": 483915,
                    "jobId": 42341,
                    "timestamp": "2012-04-23T07:31:20",
                    "timestampTypeCode": 45560001,
                    "source": "MobileApp",
                    "bookingActivityId": 482012,
                    "internalMachineId": 4021,
                    "externalMachineId": "MRK8938719",
                    "internalEmployeeId": 214,
                    "externalEmployeeId": "E214",
                    "comment": "optional remark on activity, such as why something took longer"
                  }
                ],
                "reportSurchargeList": [
                  {
                    "reportSurchargeId": 483915,
                    "jobSurchargeId": 483915,
                    "jobId": 1,
                    "reportId": 52671,
                    "dateTime": "2022-12-23T17:25:43",
                    "assignment": "RENTAL_HANDOVER",
                    "quantity": 23.2
                  }
                ],
                "eMailNotificationList": [
                  {
                    "eMailNotificationId": 1,
                    "jobId": 45123,
                    "reportId": 48192,
                    "sender": "no-reply@mydomain.com",
                    "sendDateTime": "2022-12-07T06:00:01",
                    "createDateTime": "2022-12-06T08:35:54",
                    "createdByInternalEmployeeId": 498,
                    "createdByExternalEmployeeId": "E948",
                    "modifyDateTime": "2022-12-06T12:00:20",
                    "modifiedByInternalEmployeeId": 341,
                    "modifiedByExternalEmployeeId": "E341"
                  }
                ],
                "signature": {
                  "signatureId": 0,
                  "signatureTypeCode": 45680002,
                  "signeeName": "Jerry Miller",
                  "signaturDocumentLink": {
                    "fileDocumentInternalId": 4738919,
                    "fileExternalArchiveId": "DC9301231",
                    "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                  }
                },
                "reportPDF": {
                  "fileDocumentInternalId": 4738919,
                  "fileExternalArchiveId": "DC9301231",
                  "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
                }
              }
            ],
            "surchargeList": [
              {
                "jobSurchargeId": 483915,
                "surchargeId": 8739145,
                "jobId": 82916,
                "dateTime": "2012-04-23T18:25:43.511Z",
                "assignment": "RENTAL_HANDOVER",
                "quantity": 23.5,
                "comment": "reason for quantity: additional gas can filled on customers request",
                "reportId": 456223
              }
            ],
            "formList": [
              {
                "wIP": "string"
              }
            ],
            "problemList": [
              {
                "problemId": 583911,
                "jobId": 452341,
                "problemType": 0,
                "description": "various impact dents on the left front side",
                "impactOnConditionBool": false,
                "visibleForCustomerBool": true,
                "customersFaultBool": false,
                "comment": "string",
                "solvedBool": false,
                "reportedByInternalEmployeeId": 363,
                "reportedByExternalEmployeeId": "E465",
                "reportedDateTime": "TS289182-5",
                "reportingContext": "LEVA.JOB.HANDOVER",
                "reportingContextText": "Custom Job Application",
                "fixRequiredBool": false
              }
            ],
            "transportDemandList": [
              {
                "transportDemandPositionId": 2512341,
                "jobId": 51231,
                "description": "Custom Fluid B028",
                "details": "handle with care, keep up-side up at all times",
                "unitOfMeasure": "Liter",
                "decimalCount": 2,
                "transportQuantity": 351.4,
                "loadedQuantity": 351.5,
                "unloadedQuantity": 351.4,
                "loadingDateTime": "2022-12-30T13:30:09",
                "loadingCheckmarkBool": false,
                "unloadingDateTime": "2019-08-24T14:15:22Z",
                "unloadingCheckmarkBool": false,
                "pickupLocation": {
                  "street": "Boca Chica Blvd.",
                  "houseNo": "52448",
                  "pOBox": "string",
                  "additionalLine1": "C/O Dr. Maria Smith",
                  "additionalLine2": "Environmental Dept / Building D2",
                  "country": "US",
                  "zipCode": "TX 78521",
                  "city": "Brownsville",
                  "latitude": 25.9850628,
                  "longitude": -97.1871375
                },
                "deliveryLocation": {
                  "street": "Boca Chica Blvd.",
                  "houseNo": "52448",
                  "pOBox": "string",
                  "additionalLine1": "C/O Dr. Maria Smith",
                  "additionalLine2": "Environmental Dept / Building D2",
                  "country": "US",
                  "zipCode": "TX 78521",
                  "city": "Brownsville",
                  "latitude": 25.9850628,
                  "longitude": -97.1871375
                },
                "rentalJobId": 435123
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "scheduleList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobSchedule"
            }
          },
          "contactList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobContact"
            }
          },
          "bookingActivityList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobBookingActivity"
            }
          },
          "locationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobLocation"
            }
          },
          "documentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobDocument"
            }
          },
          "timeStampList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobTimeStamp"
            }
          },
          "reportList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobReport"
            }
          },
          "surchargeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobSurcharge"
            }
          },
          "problemList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobProblem"
            }
          },
          "transportDemandList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobTransportDemand"
            }
          }
        }
      },
      "jobSchedule": {
        "title": "JobSchedule",
        "type": "object",
        "description": "a job schedule entry",
        "properties": {
          "jobScheduleId": {
            "type": "number",
            "example": 32345,
            "description": "the unique internal identifier for this job schedule entry.",
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "the internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "sortNo": {
            "type": "number",
            "example": 100,
            "description": "number for sorting of the job schedule entries from low to high (ascending)"
          },
          "description": {
            "type": "string",
            "example": "Loading",
            "description": "activity, task or milestone of the schedule",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "example": "2022-12-01T07:30:00",
            "format": "date-time",
            "nullable": true
          },
          "isOccupied": {
            "type": "boolean",
            "default": true,
            "description": "set to true for as long as the resource is occupied.\nwhen set to false, the resource is still booked for the remainder of the job but marked as available on the planning board."
          }
        },
        "x-examples": {
          "example1": {
            "jobScheduleId": 32345,
            "jobId": 1,
            "sortNo": 100,
            "description": "Loading",
            "dateTime": "2022-12-01T07:30:00",
            "isOccupied": true
          }
        }
      },
      "jobContact": {
        "title": "JobContact",
        "type": "object",
        "description": "a job contact such as \"Contact on Site\", \"Project Manager\", (...) and contact information",
        "properties": {
          "internalContactId": {
            "type": "number",
            "example": 34511,
            "description": "internal contact id",
            "nullable": true
          },
          "externalContactId": {
            "type": "string",
            "example": "KK34511",
            "description": "external identifier of contact",
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "the unique identifier for the job onto which the contact is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 84721,
            "nullable": true
          },
          "description": {
            "type": "string",
            "example": "construction site manager",
            "description": "description or type of the contact (e.g. \"project manager\")",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "example": "Frank Flintstone",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "+49 8745 951 18",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "example": "ff@customerdomain.com",
            "nullable": true
          },
          "isCustomer": {
            "type": "boolean",
            "default": true,
            "description": "if the contact is the actual customer or not (other party)"
          },
          "isContactOnLocation": {
            "type": "boolean",
            "default": true,
            "description": "set to true if the contact is supposed to be on site/location."
          }
        },
        "x-examples": {
          "example1": {
            "internalContactId": 34511,
            "externalContactId": "KK34511",
            "jobId": 84721,
            "description": "construction site manager",
            "fullName": "Frank Flintstone",
            "phone": "+49 8745 951 18",
            "eMail": "ff@customerdomain.com",
            "isCustomer": true,
            "isContactOnLocation": true
          }
        }
      },
      "jobBookingActivity": {
        "title": "JobBookingActivity",
        "type": "object",
        "description": "job booking activity are the available activities such as \"Loading\", \"Unloading\", (...) which an employee is able to choose from when adding timestamps on the job.",
        "properties": {
          "bookingActivityId": {
            "type": "number",
            "example": 82091,
            "description": "unique booking activity. other jobs containend the same activity do not have the same job booking activity id.",
            "nullable": true
          },
          "activityCode": {
            "type": "string",
            "description": "Code 4557.\nuse IF2BA to retrieve code values for activities.",
            "example": "45570018"
          },
          "activity": {
            "type": "string",
            "example": "Unloading",
            "description": "Text of activity if specified.\n\nNOTE: this may contain free-text for the activity. if the job requires a special activity e.g. \"Assist customer on demand\" a planner might replace the regular activity text with anything else (non-translated custom input)",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "example": true,
            "description": "usually set to true. if set to false, the booking activity has been revoked from the job and the employee should no longer be able to submit timestamps on that activity.",
            "default": true
          }
        },
        "required": [
          "activityCode"
        ],
        "x-examples": {
          "example1": {
            "bookingActivityId": 82091,
            "activityCode": "45570018",
            "activity": "Unloading",
            "active": true
          }
        }
      },
      "jobTimeStamp": {
        "title": "JobTimeStamp",
        "type": "object",
        "description": "job time stamp describes who (employee), which resource (machine or accessory), what activity (booking activity), when (timestamp). timestamps form a chronological order from which the effective efforts can be calculated from.\n\nif no job time stamps are provided, there are no recorded efforts on the job and the job status can not be determined.\n\nNOTE: job time stamps may differ from job report timestamps. (job time stamps reflect the internal efforts, while job report timestamps reflect the efforts that the customer will be billed for). Ideally: they match. The reality is, that the backend clerks may be forced to adjust the report quantities to correct various issues (e.g. misheaps)",
        "x-examples": {
          "example1": {
            "jobTimestampId": 483915,
            "jobId": 1,
            "timestamp": "2012-04-23",
            "timestampTypeCode": 45560001,
            "bookingActivityId": 45570005,
            "internalMachineId": 45123,
            "externalMachineId": "MRK8938719",
            "internalEmployeeId": 241,
            "externalEmployeeId": "E492",
            "comment": "took longer than expected due to mess at the construction site"
          }
        },
        "properties": {
          "jobTimestampId": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2012-04-23"
          },
          "timestampTypeCode": {
            "type": "integer",
            "format": "int32",
            "description": "Code 4556.\nThe type of timestamp (TimestampType).",
            "example": 45560001
          },
          "bookingActivityId": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "example": 45570005,
            "nullable": true
          },
          "internalMachineId": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for the machine.",
            "example": 45123,
            "nullable": true
          },
          "externalMachineId": {
            "type": "string",
            "description": "The external unique identifer for the the machine this job time stamp is assigned to",
            "example": "MRK8938719",
            "nullable": true
          },
          "internalEmployeeId": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee.",
            "example": 241
          },
          "externalEmployeeId": {
            "type": "string",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "E492",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "A comment associated with the timestamp.",
            "example": "took longer than expected due to mess at the construction site",
            "nullable": true
          }
        },
        "required": [
          "timestamp",
          "timestampTypeCode",
          "internalEmployeeId"
        ]
      },
      "jobReport": {
        "title": "JobReport",
        "type": "object",
        "description": "job report on a job.\nthere may be multiple job reports on a single job for different timespans. e.g. daily, weekly or monthly reports.\nNOTE: reporting timeframes of two particular reports shall not overlap or they will be marked with an error on the backend.",
        "properties": {
          "reportId": {
            "type": "number",
            "description": "internal unique report id",
            "example": 31234,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "reportFromDate": {
            "type": "string",
            "format": "date",
            "description": "begin of reporting time span",
            "example": "2022-12-01"
          },
          "reportToDate": {
            "type": "string",
            "format": "date",
            "description": "end of reporting time span",
            "example": "2012-12-23"
          },
          "comment": {
            "type": "string",
            "description": "additional comments on the report (usually visible on report) and for backoffice",
            "example": "return was delayed due to traffic jam at our gates > not her fault!"
          },
          "reportTimeStampList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobReportTimeStamp"
            }
          },
          "reportSurchargeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobReportSurcharge"
            }
          },
          "eMailNotificationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/jobReportEMailNotification"
            }
          },
          "signature": {
            "$ref": "#/components/schemas/signature"
          },
          "reportPDF": {
            "$ref": "#/components/schemas/fileDocumentLink"
          }
        },
        "required": [
          "reportFromDate",
          "reportToDate",
          "comment"
        ],
        "x-examples": {
          "example1": {
            "reportId": 31234,
            "reportFromDate": "2022-12-01",
            "reportToDate": "2012-12-23",
            "comment": "return was delayed due to traffic jam at our gates > not her fault!",
            "reportTimeStampList": [
              {
                "jobReportTimestampId": 483915,
                "jobId": 42341,
                "timestamp": "2012-04-23T07:31:20",
                "timestampTypeCode": 45560001,
                "source": "MobileApp",
                "bookingActivityId": 482012,
                "internalMachineId": 4021,
                "externalMachineId": "MRK8938719",
                "internalEmployeeId": 214,
                "externalEmployeeId": "E214",
                "comment": "optional remark on activity, such as why something took longer"
              }
            ],
            "reportSurchargeList": [
              {
                "reportSurchargeId": 483915,
                "jobSurchargeId": 483915,
                "jobId": 1,
                "reportId": 52671,
                "dateTime": "2022-12-23T17:25:43",
                "assignment": "RENTAL_HANDOVER",
                "quantity": 23.2
              }
            ],
            "eMailNotificationList": [
              {
                "eMailNotificationId": 1,
                "jobId": 45123,
                "reportId": 48192,
                "sender": "no-reply@mydomain.com",
                "sendDateTime": "2022-12-07T06:00:01",
                "createDateTime": "2022-12-06T08:35:54",
                "createdByInternalEmployeeId": 498,
                "createdByExternalEmployeeId": "E948",
                "modifyDateTime": "2022-12-06T12:00:20",
                "modifiedByInternalEmployeeId": 341,
                "modifiedByExternalEmployeeId": "E341"
              }
            ],
            "signature": {
              "signatureId": 547,
              "signatureTypeCode": 45680002,
              "signeeName": "Jerry Miller",
              "signaturDocumentLink": {
                "fileDocumentInternalId": 4738919,
                "fileExternalArchiveId": "DC9301231",
                "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
              }
            },
            "reportPDF": {
              "fileDocumentInternalId": 4738919,
              "fileExternalArchiveId": "DC9301231",
              "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
            }
          }
        }
      },
      "jobReportTimeStamp": {
        "title": "JobReportTimeStamp",
        "type": "object",
        "description": "job report time stamp entry that forms the reported amount of efforts on a job.\n\nNOTE: these entries may differ from job time stamps. they form the amount of effort that are transfered back to the order billing. In some instances they may be different from the actual time stamps that were made on the job.",
        "x-examples": {
          "example1": {
            "jobReportTimestampId": 483915,
            "jobId": 42341,
            "timestamp": "2012-04-23T07:31:20",
            "timestampTypeCode": 45560001,
            "source": "MobileApp",
            "bookingActivityId": 482012,
            "internalMachineId": 4021,
            "externalMachineId": "MRK8938719",
            "internalEmployeeId": 214,
            "externalEmployeeId": "E214",
            "comment": "optional remark on activity, such as why something took longer"
          }
        },
        "properties": {
          "jobReportTimestampId": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the job report timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 42341,
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp associated with the job.",
            "example": "2012-04-23T07:31:20"
          },
          "timestampTypeCode": {
            "type": "integer",
            "format": "int32",
            "description": "Code 4556.\nThe type of timestamp (TimestampType).",
            "example": 45560001
          },
          "source": {
            "type": "string",
            "description": "The type of timestamp (TimestampType).",
            "example": "MobileApp"
          },
          "bookingActivityId": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "example": 482012,
            "nullable": true
          },
          "internalMachineId": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for the machine.",
            "example": 4021,
            "nullable": true
          },
          "externalMachineId": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the machine this job time stamp is assigned to",
            "example": "MRK8938719",
            "nullable": true
          },
          "internalEmployeeId": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee.",
            "example": 214
          },
          "externalEmployeeId": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "E214",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "A comment associated with the timestamp.",
            "example": "optional remark on activity, such as why something took longer",
            "nullable": true
          }
        },
        "required": [
          "timestamp",
          "timestampTypeCode",
          "source",
          "internalEmployeeId"
        ]
      },
      "jobLocation": {
        "title": "JobLocation",
        "type": "object",
        "description": "location information for leva+ (address, additional information such as restrictions, ect.)",
        "x-examples": {
          "example1": {
            "locationId": 8392,
            "description": "Construction Site, Gate 4",
            "transportRestriction": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
            "address": {
              "street": "Boca Chica Blvd.",
              "houseNo": "52448",
              "pOBox": "string",
              "additionalLine1": "C/O Dr. Maria Smith",
              "additionalLine2": "Environmental Dept / Building D2",
              "country": "US",
              "zipCode": "TX 78521",
              "city": "Brownsville",
              "latitude": 25.9850628,
              "longitude": -97.1871375
            }
          }
        },
        "properties": {
          "locationId": {
            "type": "number",
            "example": 8392,
            "minimum": 1,
            "maximum": 9999999,
            "description": "unique identifier of job location",
            "nullable": true
          },
          "description": {
            "type": "string",
            "example": "Construction Site, Gate 4",
            "description": "location optional description",
            "nullable": true
          },
          "transportRestriction": {
            "type": "string",
            "description": "optional transport restriction information as text",
            "example": "limited height 4.5 meteres at gate 3, prefer gate 4 (no height limit)",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "jobReportSurcharge": {
        "title": "JobReportSurcharge",
        "type": "object",
        "description": "job report (surcharge) defines the surcharge from master data, which is reported on the job.",
        "x-examples": {
          "example1": {
            "reportSurchargeId": 483915,
            "jobSurchargeId": 483915,
            "jobId": 1,
            "reportId": 52671,
            "dateTime": "2022-12-23T17:25:43",
            "assignment": "RENTAL_HANDOVER",
            "quantity": 23.2
          }
        },
        "properties": {
          "reportSurchargeId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job report surcharge",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobSurchargeId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job surcharge\n\nNOTE: refers to the job surcharge that has already been submitted on the job. If this is set, it means that the submitted surcharge on the job is also reported.\n\nthat way, the backend can mark the surcharge as \"reported with report xy\". otherwise the surcharge on the job may be left without a report link and could therefor be seen as \"not yet reported\".",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "reportId": {
            "type": "number",
            "description": "report ID on which this surcharge is reported",
            "example": 52671,
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "description": "date and time when the report surcharge was added",
            "example": "2022-12-23T17:25:43"
          },
          "assignment": {
            "type": "string",
            "enum": [
              "RENTAL_HANDOVER",
              "RENTAL_RETURN",
              "RENTAL_OTHER"
            ],
            "example": "RENTAL_HANDOVER",
            "description": "assigns the surcharge to a specific job process step.",
            "maxLength": 30
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "reported quantity in unit of measure of surcharge master data",
            "example": 23.2,
            "minimum": 0,
            "maximum": 999999.99
          }
        }
      },
      "jobReportEMailNotification": {
        "title": "JobReportEMailNotification",
        "type": "object",
        "description": "job report e-mail notification entry which containers a receiver for a job report.\nthe entry is created and submitted with the job report. the backend can process report pdf generation and automatically sends out the report pdf to the receiver given by this entry. It will then be updated with a Sender and SendDateTime when processed.\n\nIf you already sent out the notification, you may submit this entry with sender and senddatetime in order for the backend to acknoledge that.",
        "x-examples": {
          "example1": {
            "eMailNotificationId": 1,
            "jobId": 45123,
            "reportId": 48192,
            "sender": "no-reply@mydomain.com",
            "sendDateTime": "2022-12-07T06:00:01",
            "createDateTime": "2022-12-06T08:35:54",
            "createdByInternalEmployeeId": 498,
            "createdByExternalEmployeeId": "E948",
            "modifyDateTime": "2022-12-06T12:00:20",
            "modifiedByInternalEmployeeId": 341,
            "modifiedByExternalEmployeeId": "E341"
          }
        },
        "properties": {
          "eMailNotificationId": {
            "type": "integer",
            "format": "int32",
            "description": "email notification entry id",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job onto which the notification is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 45123,
            "nullable": true
          },
          "reportId": {
            "type": "number",
            "description": "unique identifier for the report onto which the notification is assigned",
            "minimum": 1,
            "maximum": 9999999,
            "example": 48192,
            "nullable": true
          },
          "sender": {
            "type": "string",
            "format": "float",
            "description": "a string that contains information about the sender of the notification (only filled, when notification has been successfully sent, otherwise empty). typically an e-mail address like no-reply@mydomain.com",
            "example": "no-reply@mydomain.com",
            "nullable": true
          },
          "sendDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "date and time of sent notification (only when successfully sent, otherwise empty)",
            "example": "2022-12-07T06:00:01",
            "nullable": true
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the notification was added",
            "example": "2022-12-06T08:35:54"
          },
          "createdByInternalEmployeeId": {
            "type": "number",
            "description": "internal employee ID who added this notification entry",
            "example": 498,
            "minimum": 1,
            "maximum": 9999999,
            "nullable": true
          },
          "createdByExternalEmployeeId": {
            "type": "string",
            "description": "external employee id who added this notification entry",
            "example": "E948",
            "nullable": true
          },
          "modifyDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "date and time of modification of the notification entry (in case it is updated later)",
            "example": "2022-12-06T12:00:20",
            "nullable": true
          },
          "modifiedByInternalEmployeeId": {
            "type": "number",
            "format": "float",
            "description": "internal employee id who last modified the entry (in case it is updated later e.g. on backend)",
            "example": 341,
            "minimum": 1,
            "maximum": 9999999,
            "nullable": true
          },
          "modifiedByExternalEmployeeId": {
            "type": "string",
            "description": "external employee id who last modified the entry (in case it is updated later e.g. on backend)",
            "example": "E341",
            "nullable": true
          }
        }
      },
      "jobHandOver": {
        "title": "JobHandOver",
        "type": "object",
        "description": "a handover for a rental job. confirms that the resource (machine / accessory) has been handed over to the customer. Additional information such as a comment and signature can be supplied.",
        "properties": {
          "handoverId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the hand over",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "id of the job onto which this handover is assigned to",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 34451,
            "nullable": true
          },
          "internalEmployeeId": {
            "type": "integer",
            "format": "int32",
            "description": "internal unique identifer of the employee that made this handover",
            "example": 341
          },
          "externalEmployeeId": {
            "type": "string",
            "format": "int32",
            "description": "external unique identifer of the employee that made this handover",
            "example": "E341",
            "nullable": true
          },
          "handoverCompletedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "date and time at which the handover is completed.\n\nNOTE: this timestamp typically marks the actual beginning of the rental period.",
            "example": "2012-04-23T18:25:43.511Z"
          },
          "customerBriefed": {
            "type": "boolean",
            "example": true,
            "description": "wether or not the customer was explicitly briefed on the machine/accessory",
            "default": false
          },
          "comment": {
            "type": "string",
            "description": "any remarks made by employee that should be noted on this handover",
            "example": "customer already knows the machine very well",
            "nullable": true
          },
          "customerSignature": {
            "$ref": "#/components/schemas/signature"
          }
        },
        "required": [
          "handoverCompletedDateTime",
          "customerBriefed"
        ],
        "x-examples": {
          "example1": {
            "handoverId": 483915,
            "jobId": 34451,
            "internalEmployeeId": 341,
            "externalEmployeeId": "E341",
            "handoverCompletedDateTime": "2012-04-23T18:25:43.511Z",
            "customerBriefed": false,
            "comment": "customer already knows the machine very well",
            "customerSignature": {
              "signatureId": 547,
              "signatureTypeCode": 45680002,
              "signeeName": "Jerry Miller",
              "signaturDocumentLink": {
                "fileDocumentInternalId": 4738919,
                "fileExternalArchiveId": "DC9301231",
                "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154"
              }
            }
          }
        }
      },
      "jobReturn": {
        "title": "JobReturn",
        "type": "object",
        "description": "a return for a rental job. confirms that the resource (machine / accessory) has been returned / picked up. Additional information such as a comment or wether or not the resource has been damaged is submitted.",
        "properties": {
          "returnId": {
            "type": "integer",
            "format": "int32",
            "description": "unique id of this return",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "unique id of job onto which this return is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 45612,
            "nullable": true
          },
          "internalEmployeeId": {
            "type": "integer",
            "format": "int32",
            "description": "internal employee id who made the return",
            "example": 345
          },
          "externalEmployeeId": {
            "type": "string",
            "format": "int32",
            "description": "external employee id who made the return",
            "example": "E345",
            "nullable": true
          },
          "returnStartedDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2012-04-23T18:25:43.511Z",
            "description": "actual date time at which the return process started\n\nNOTE: this typically marks the end of a rental period."
          },
          "damage": {
            "type": "boolean",
            "example": false,
            "description": "set when a damage is noticed on return",
            "default": false
          },
          "comment": {
            "type": "string",
            "description": "any additional information noted by the employee for this return",
            "example": "very good condition, customer cleaned it and even replaced a missing screen wiper!",
            "nullable": true
          }
        },
        "required": [
          "damage"
        ],
        "x-examples": {
          "example1": {
            "returnId": 483915,
            "jobId": 45612,
            "internalEmployeeId": 345,
            "externalEmployeeId": "E345",
            "returnStartedDateTime": "2012-04-23T18:25:43.511Z",
            "damage": false,
            "comment": "very good condition, customer cleaned it and even replaced a missing screen wiper!"
          }
        }
      },
      "jobSurcharge": {
        "title": "JobSurcharge",
        "type": "object",
        "description": "surcharge recorded on a job that is either entered by the employee (e.g. gas refilling in liters) or generated by the system (e.g. overtime surcharge).\n\nNOTE: rental specific surcharges may not be submitted on other service jobs such as crane work or transport.",
        "properties": {
          "jobSurchargeId": {
            "type": "integer",
            "format": "int32",
            "description": "the unique identifier for this job surcharge",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true,
            "readOnly": true
          },
          "surchargeId": {
            "type": "integer",
            "description": "unique ID of the surcharge (master data)",
            "example": 8739145,
            "minimum": 1,
            "maximum": 9999999999,
            "format": "int32",
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 82916,
            "description": "unique id of job",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "description": "when the surcharge was recorded",
            "example": "2012-04-23T18:25:43.511Z"
          },
          "assignment": {
            "type": "string",
            "enum": [
              "RENTAL_HANDOVER",
              "RENTAL_RETURN",
              "RENTAL_OTHER"
            ],
            "example": "RENTAL_HANDOVER",
            "description": "assigns the surcharge to a specific job process step.",
            "maxLength": 30
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "quantity in price unit of measure given by the base-surcharge",
            "example": 23.5,
            "minimum": 0
          },
          "comment": {
            "type": "string",
            "format": "float",
            "description": "optional comment by the employee who submitted the surcharge",
            "example": "reason for quantity: additional gas can filled on customers request",
            "maxLength": 2000
          },
          "reportId": {
            "type": "number",
            "description": "report id which contains this surcharge entry. surcharges are generally created during the entire job process. reports collect them for invoicing. if a surcharge is not assigned to a report, it is not considered for billing.\n\nWhen the job surcharge id is provided on job report creation, report ID field will be filled by the back end.",
            "example": 456223,
            "nullable": true
          }
        },
        "required": [
          "dateTime",
          "assignment",
          "quantity"
        ],
        "x-examples": {
          "example1": {
            "jobSurchargeId": 483915,
            "surchargeId": 8739145,
            "jobId": 82916,
            "dateTime": "2012-04-23T18:25:43.511Z",
            "assignment": "RENTAL_HANDOVER",
            "quantity": 23.5,
            "comment": "reason for quantity: additional gas can filled on customers request",
            "reportId": 456223
          }
        }
      },
      "jobProblem": {
        "title": "JobProblem",
        "type": "object",
        "description": "on a job problem specific conditions or issues related to the resource (machine / accessory) are stored.\nthey may be submitted in the initial job to clarify existing issues that can be mentioned on handover, or additional job problems are submitted during handover or return to better clarify wether or not something is caused by the customer.",
        "x-examples": {
          "example1": {
            "problemId": 583911,
            "jobId": 452341,
            "problemType": 0,
            "description": "various impact dents on the left front side",
            "impactOnConditionBool": false,
            "visibleForCustomerBool": true,
            "customersFaultBool": false,
            "comment": "string",
            "solvedBool": false,
            "reportedByInternalEmployeeId": 363,
            "reportedByExternalEmployeeId": "E465",
            "reportedDateTime": "TS289182-5",
            "reportingContext": "LEVA.JOB.HANDOVER",
            "reportingContextText": "Custom Job Application",
            "fixRequiredBool": false
          }
        },
        "properties": {
          "problemId": {
            "type": "number",
            "description": "unique id of this problem",
            "example": 583911,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job on which this problem is assigned to",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 452341,
            "nullable": true
          },
          "problemType": {
            "type": "number"
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "description": "title and or description of the problem",
            "example": "various impact dents on the left front side"
          },
          "impactOnConditionBool": {
            "type": "boolean",
            "description": "wether or not the problem is a condition of the resource.\n\nconditions will be transfered noted on the machine / accessory and can furthermore be passed onto future rentals.",
            "default": false
          },
          "visibleForCustomerBool": {
            "type": "boolean",
            "default": true,
            "description": "wether or not the problem is visible for the customer."
          },
          "customersFaultBool": {
            "type": "boolean",
            "description": "wether or not the problem was caused by the customer and actually is customers fault",
            "default": false
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "description": "any further commend / description on the problem",
            "nullable": true
          },
          "solvedBool": {
            "type": "boolean",
            "default": false,
            "description": "marked if the problem has been solved"
          },
          "reportedByInternalEmployeeId": {
            "type": "integer",
            "format": "int32",
            "description": "internal identifier for the employee.",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 363
          },
          "reportedByExternalEmployeeId": {
            "type": "string",
            "description": "external employee id",
            "example": "E465",
            "nullable": true
          },
          "reportedDateTime": {
            "type": "string",
            "format": "int32",
            "description": "date and time at which the problem is noted",
            "example": "TS289182-5"
          },
          "reportingContext": {
            "type": "string",
            "example": "LEVA.JOB.HANDOVER",
            "maxLength": 30,
            "enum": [
              "LEVA.JOB.HANDOVER",
              "LEVA.JOB.RETURN"
            ],
            "description": "during which context (process) the problem has been noted."
          },
          "reportingContextText": {
            "type": "string",
            "format": "int32",
            "description": "Addition context information (e.g. reported by mobile device)",
            "maxLength": 200,
            "example": "Custom Job Application"
          },
          "fixRequiredBool": {
            "type": "boolean",
            "description": "wether or not the problem requires an fix\n\nproblems that require a fix will leave a notification on the resource and is visible on the planning board",
            "default": false
          }
        },
        "required": [
          "problemType",
          "description",
          "impactOnConditionBool",
          "visibleForCustomerBool",
          "customersFaultBool",
          "solvedBool",
          "reportedDateTime",
          "reportingContext",
          "reportingContextText",
          "fixRequiredBool"
        ]
      },
      "jobDocument": {
        "title": "JobDocument",
        "type": "object",
        "description": "an existing document linked to the job",
        "properties": {
          "jobDocumentId": {
            "type": "number",
            "description": "unique id of this job document assignment. note: this is not the document id, but the assignment of a document to a job",
            "example": 583911,
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "description": "unique identifier for the job on which this document is assigned to",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 452341,
            "nullable": true
          },
          "jobDocument": {
            "$ref": "#/components/schemas/fileDocumentLink"
          }
        },
        "x-examples": {
          "example1": {
            "jobDocumentId": 583911,
            "jobId": 452341,
            "jobDocument": {
              "fileDocumentInternalId": 4738919,
              "fileExternalArchiveId": "DC9301231",
              "fileDocumentGuid": "fa5df08c-f483-4dfc-be0e-9ad8a3127154",
              "externalArchiveURL": "DMS://Documents/Orders/46211232"
            }
          }
        }
      },
      "jobTransportDemand": {
        "title": "JobTransportDemand",
        "type": "object",
        "description": "job transport demand clarifies what, how much, needs to go where and when.",
        "x-examples": {
          "example1": {
            "transportDemandPositionId": 2512341,
            "jobId": 51231,
            "description": "Custom Fluid B028",
            "details": "handle with care, keep up-side up at all times",
            "unitOfMeasure": "Liter",
            "decimalCount": 2,
            "transportQuantity": 351.4,
            "loadedQuantity": 351.5,
            "unloadedQuantity": 351.4,
            "loadingDateTime": "2022-12-30T13:30:09",
            "loadingCheckmarkBool": false,
            "unloadingDateTime": "2019-08-24T14:15:22Z",
            "unloadingCheckmarkBool": false,
            "pickupLocation": {
              "street": "Boca Chica Blvd.",
              "houseNo": "52448",
              "pOBox": "string",
              "additionalLine1": "C/O Dr. Maria Smith",
              "additionalLine2": "Environmental Dept / Building D2",
              "country": "US",
              "zipCode": "TX 78521",
              "city": "Brownsville",
              "latitude": 25.9850628,
              "longitude": -97.1871375
            },
            "deliveryLocation": {
              "street": "Boca Chica Blvd.",
              "houseNo": "52448",
              "pOBox": "string",
              "additionalLine1": "C/O Dr. Maria Smith",
              "additionalLine2": "Environmental Dept / Building D2",
              "country": "US",
              "zipCode": "TX 78521",
              "city": "Brownsville",
              "latitude": 25.9850628,
              "longitude": -97.1871375
            },
            "rentalJobId": 435123
          }
        },
        "properties": {
          "transportDemandPositionId": {
            "type": "number",
            "example": 2512341,
            "minimum": 1,
            "maximum": 9999999999,
            "description": "internal unique id for this job transport demand"
          },
          "jobId": {
            "type": "number",
            "example": 51231,
            "minimum": 1,
            "maximum": 9999999999,
            "description": "unique job id",
            "nullable": true
          },
          "description": {
            "type": "string",
            "example": "Custom Fluid B028",
            "description": "description of good"
          },
          "details": {
            "type": "string",
            "example": "handle with care, keep up-side up at all times",
            "description": "additional detail / information",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "example": "Liter",
            "description": "UoM in wich the quantity is transported"
          },
          "decimalCount": {
            "type": "integer",
            "description": "amount of decimals in quantity allowed for this UoM",
            "example": 2,
            "format": "int32"
          },
          "transportQuantity": {
            "type": "number",
            "example": 351.4,
            "format": "double"
          },
          "loadedQuantity": {
            "type": "number",
            "description": "loaded quantity can be different from the demand. use-case is under or over-delivery",
            "example": 351.5,
            "format": "double"
          },
          "unloadedQuantity": {
            "type": "number",
            "description": "unloaded quantity can be different from the demand. use-case is under or over-delivery",
            "example": 351.4,
            "format": "double"
          },
          "loadingDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Planned loading date and time.",
            "example": "2022-12-30T13:30:09"
          },
          "loadingCheckmarkBool": {
            "type": "boolean",
            "format": "date-time",
            "default": false,
            "description": "checkmark wether or not loading has been completed."
          },
          "unloadingDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Planned unloading date and time."
          },
          "unloadingCheckmarkBool": {
            "type": "boolean",
            "format": "date-time",
            "default": false,
            "description": "checkmark wether or not unloading has been completed."
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/address"
          },
          "deliveryLocation": {
            "$ref": "#/components/schemas/address"
          },
          "rentalJobId": {
            "type": "number",
            "description": "is set, when the current transport demand (assigned resource) points to a rental job.",
            "example": 435123,
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "examples": {}
  },
  "security": [
    {
      "basic": []
    }
  ],
  "tags": [
    {
      "name": "MasterData"
    },
    {
      "name": "SchedulingJob"
    }
  ]
}